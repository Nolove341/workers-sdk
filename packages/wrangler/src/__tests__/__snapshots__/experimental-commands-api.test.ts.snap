// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`experimental_getWranglerCommands > returns complete command tree structure 1`] = `
"{
  \\"subtree\\": {
    \\"docs\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler docs\\",
        \\"metadata\\": {
          \\"description\\": \\"📚 Open Wrangler's command documentation in your browser\\\\n\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\"
        },
        \\"args\\": {
          \\"search\\": {
            \\"describe\\": \\"Enter search terms (e.g. the wrangler command) you want to know more about\\",
            \\"type\\": \\"string\\",
            \\"array\\": true
          },
          \\"yes\\": {
            \\"alias\\": \\"y\\",
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Takes you to the docs, even if search fails\\"
          }
        },
        \\"positionalArgs\\": {
          \\"0\\": \\"search\\"
        }
      },
      \\"subtree\\": {}
    },
    \\"init\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler init\\",
        \\"metadata\\": {
          \\"description\\": \\"📥 Initialize a basic Worker\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\"
        },
        \\"args\\": {
          \\"name\\": {
            \\"describe\\": \\"The name of your worker\\",
            \\"type\\": \\"string\\"
          },
          \\"yes\\": {
            \\"describe\\": \\"Answer \\\\\\"yes\\\\\\" to any prompts for new projects\\",
            \\"type\\": \\"boolean\\",
            \\"alias\\": \\"y\\"
          },
          \\"from-dash\\": {
            \\"describe\\": \\"The name of the Worker you wish to download from the Cloudflare dashboard for local development.\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"delegate-c3\\": {
            \\"describe\\": \\"Delegate to Create Cloudflare CLI (C3)\\",
            \\"type\\": \\"boolean\\",
            \\"hidden\\": true,
            \\"default\\": true,
            \\"alias\\": \\"c3\\"
          }
        },
        \\"behaviour\\": {
          \\"provideConfig\\": false
        },
        \\"positionalArgs\\": {
          \\"0\\": \\"name\\"
        }
      },
      \\"subtree\\": {}
    },
    \\"dev\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler dev\\",
        \\"behaviour\\": {
          \\"provideConfig\\": false
        },
        \\"metadata\\": {
          \\"description\\": \\"👂 Start a local server for developing your Worker\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\"
        },
        \\"positionalArgs\\": {
          \\"0\\": \\"script\\"
        },
        \\"args\\": {
          \\"script\\": {
            \\"describe\\": \\"The path to an entry point for your Worker\\",
            \\"type\\": \\"string\\"
          },
          \\"name\\": {
            \\"describe\\": \\"Name of the Worker\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"compatibility-date\\": {
            \\"describe\\": \\"Date to use for compatibility checks\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"compatibility-flags\\": {
            \\"describe\\": \\"Flags to use for compatibility checks\\",
            \\"alias\\": \\"compatibility-flag\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"latest\\": {
            \\"describe\\": \\"Use the latest version of the Workers runtime\\",
            \\"type\\": \\"boolean\\",
            \\"default\\": true
          },
          \\"assets\\": {
            \\"describe\\": \\"Static assets to be served. Replaces Workers Sites.\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"bundle\\": {
            \\"describe\\": \\"Run wrangler's compilation step before publishing\\",
            \\"type\\": \\"boolean\\",
            \\"hidden\\": true
          },
          \\"no-bundle\\": {
            \\"describe\\": \\"Skip internal build steps and directly deploy script\\",
            \\"type\\": \\"boolean\\",
            \\"default\\": false
          },
          \\"ip\\": {
            \\"describe\\": \\"IP address to listen on\\",
            \\"type\\": \\"string\\"
          },
          \\"port\\": {
            \\"describe\\": \\"Port to listen on\\",
            \\"type\\": \\"number\\"
          },
          \\"inspector-port\\": {
            \\"describe\\": \\"Port for devtools to connect to\\",
            \\"type\\": \\"number\\"
          },
          \\"routes\\": {
            \\"describe\\": \\"Routes to upload\\",
            \\"alias\\": \\"route\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"host\\": {
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"describe\\": \\"Host to forward requests to, defaults to the zone of project\\"
          },
          \\"local-protocol\\": {
            \\"describe\\": \\"Protocol to listen to requests on, defaults to http.\\",
            \\"choices\\": {
              \\"0\\": \\"http\\",
              \\"1\\": \\"https\\"
            }
          },
          \\"https-key-path\\": {
            \\"describe\\": \\"Path to a custom certificate key\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"https-cert-path\\": {
            \\"describe\\": \\"Path to a custom certificate\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"local-upstream\\": {
            \\"type\\": \\"string\\",
            \\"describe\\": \\"Host to act as origin in local mode, defaults to dev.host or route\\"
          },
          \\"enable-containers\\": {
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Whether to build and enable containers during development\\",
            \\"hidden\\": true
          },
          \\"site\\": {
            \\"describe\\": \\"Root folder of static assets for Workers Sites\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"hidden\\": true,
            \\"deprecated\\": true
          },
          \\"site-include\\": {
            \\"describe\\": \\"Array of .gitignore-style patterns that match file or directory names from the sites directory. Only matched items will be uploaded.\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true,
            \\"hidden\\": true,
            \\"deprecated\\": true
          },
          \\"site-exclude\\": {
            \\"describe\\": \\"Array of .gitignore-style patterns that match file or directory names from the sites directory. Matched items will not be uploaded.\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true,
            \\"hidden\\": true,
            \\"deprecated\\": true
          },
          \\"upstream-protocol\\": {
            \\"describe\\": \\"Protocol to forward requests to host on, defaults to https.\\",
            \\"choices\\": {
              \\"0\\": \\"http\\",
              \\"1\\": \\"https\\"
            }
          },
          \\"var\\": {
            \\"describe\\": \\"A key-value pair to be injected into the script as a variable\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"define\\": {
            \\"describe\\": \\"A key-value pair to be substituted in the script\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"alias\\": {
            \\"describe\\": \\"A module pair to be substituted in the script\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"jsx-factory\\": {
            \\"describe\\": \\"The function that is called for each JSX element\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"jsx-fragment\\": {
            \\"describe\\": \\"The function that is called for each JSX fragment\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"tsconfig\\": {
            \\"describe\\": \\"Path to a custom tsconfig.json file\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"remote\\": {
            \\"alias\\": \\"r\\",
            \\"describe\\": \\"Run on the global Cloudflare network with access to production resources\\",
            \\"type\\": \\"boolean\\",
            \\"default\\": false
          },
          \\"local\\": {
            \\"alias\\": \\"l\\",
            \\"describe\\": \\"Run on my machine\\",
            \\"type\\": \\"boolean\\",
            \\"deprecated\\": true,
            \\"hidden\\": true
          },
          \\"minify\\": {
            \\"describe\\": \\"Minify the script\\",
            \\"type\\": \\"boolean\\"
          },
          \\"node-compat\\": {
            \\"describe\\": \\"Enable Node.js compatibility\\",
            \\"type\\": \\"boolean\\",
            \\"hidden\\": true,
            \\"deprecated\\": true
          },
          \\"persist-to\\": {
            \\"describe\\": \\"Specify directory to use for local persistence (defaults to .wrangler/state)\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"live-reload\\": {
            \\"describe\\": \\"Auto reload HTML pages when change is detected in local mode\\",
            \\"type\\": \\"boolean\\"
          },
          \\"legacy-env\\": {
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Use legacy environments\\",
            \\"hidden\\": true
          },
          \\"test-scheduled\\": {
            \\"describe\\": \\"Test scheduled events by visiting /__scheduled in browser\\",
            \\"type\\": \\"boolean\\",
            \\"default\\": false
          },
          \\"log-level\\": {
            \\"choices\\": {
              \\"0\\": \\"debug\\",
              \\"1\\": \\"info\\",
              \\"2\\": \\"log\\",
              \\"3\\": \\"warn\\",
              \\"4\\": \\"error\\",
              \\"5\\": \\"none\\"
            },
            \\"describe\\": \\"Specify logging level\\"
          },
          \\"show-interactive-dev-session\\": {
            \\"describe\\": \\"Show interactive dev session (defaults to true if the terminal supports interactivity)\\",
            \\"type\\": \\"boolean\\"
          },
          \\"experimental-vectorize-bind-to-prod\\": {
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Bind to production Vectorize indexes in local development mode\\",
            \\"default\\": false
          },
          \\"experimental-images-local-mode\\": {
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Use a local lower-fidelity implementation of the Images binding\\",
            \\"default\\": false
          }
        }
      },
      \\"subtree\\": {}
    },
    \\"deploy\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler deploy\\",
        \\"metadata\\": {
          \\"description\\": \\"🆙 Deploy a Worker to Cloudflare\\",
          \\"owner\\": \\"Workers: Deploy and Config\\",
          \\"status\\": \\"stable\\"
        },
        \\"positionalArgs\\": {
          \\"0\\": \\"script\\"
        },
        \\"args\\": {
          \\"script\\": {
            \\"describe\\": \\"The path to an entry point for your Worker\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"name\\": {
            \\"describe\\": \\"Name of the Worker\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"bundle\\": {
            \\"describe\\": \\"Run Wrangler's compilation step before publishing\\",
            \\"type\\": \\"boolean\\",
            \\"hidden\\": true
          },
          \\"no-bundle\\": {
            \\"describe\\": \\"Skip internal build steps and directly deploy Worker\\",
            \\"type\\": \\"boolean\\",
            \\"default\\": false
          },
          \\"outdir\\": {
            \\"describe\\": \\"Output directory for the bundled Worker\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"outfile\\": {
            \\"describe\\": \\"Output file for the bundled worker\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"compatibility-date\\": {
            \\"describe\\": \\"Date to use for compatibility checks\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"compatibility-flags\\": {
            \\"describe\\": \\"Flags to use for compatibility checks\\",
            \\"alias\\": \\"compatibility-flag\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"latest\\": {
            \\"describe\\": \\"Use the latest version of the Workers runtime\\",
            \\"type\\": \\"boolean\\",
            \\"default\\": false
          },
          \\"assets\\": {
            \\"describe\\": \\"Static assets to be served. Replaces Workers Sites.\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"site\\": {
            \\"describe\\": \\"Root folder of static assets for Workers Sites\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"hidden\\": true,
            \\"deprecated\\": true
          },
          \\"site-include\\": {
            \\"describe\\": \\"Array of .gitignore-style patterns that match file or directory names from the sites directory. Only matched items will be uploaded.\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true,
            \\"hidden\\": true,
            \\"deprecated\\": true
          },
          \\"site-exclude\\": {
            \\"describe\\": \\"Array of .gitignore-style patterns that match file or directory names from the sites directory. Matched items will not be uploaded.\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true,
            \\"hidden\\": true,
            \\"deprecated\\": true
          },
          \\"var\\": {
            \\"describe\\": \\"A key-value pair to be injected into the script as a variable\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"define\\": {
            \\"describe\\": \\"A key-value pair to be substituted in the script\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"alias\\": {
            \\"describe\\": \\"A module pair to be substituted in the script\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"triggers\\": {
            \\"describe\\": \\"cron schedules to attach\\",
            \\"alias\\": {
              \\"0\\": \\"schedule\\",
              \\"1\\": \\"schedules\\"
            },
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"routes\\": {
            \\"describe\\": \\"Routes to upload\\",
            \\"alias\\": \\"route\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"array\\": true
          },
          \\"jsx-factory\\": {
            \\"describe\\": \\"The function that is called for each JSX element\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"jsx-fragment\\": {
            \\"describe\\": \\"The function that is called for each JSX fragment\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"tsconfig\\": {
            \\"describe\\": \\"Path to a custom tsconfig.json file\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"minify\\": {
            \\"describe\\": \\"Minify the Worker\\",
            \\"type\\": \\"boolean\\"
          },
          \\"node-compat\\": {
            \\"describe\\": \\"Enable Node.js compatibility\\",
            \\"type\\": \\"boolean\\",
            \\"hidden\\": true,
            \\"deprecated\\": true
          },
          \\"dry-run\\": {
            \\"describe\\": \\"Don't actually deploy\\",
            \\"type\\": \\"boolean\\"
          },
          \\"metafile\\": {
            \\"describe\\": \\"Path to output build metadata from esbuild. If flag is used without a path, defaults to 'bundle-meta.json' inside the directory specified by --outdir.\\",
            \\"type\\": \\"string\\"
          },
          \\"keep-vars\\": {
            \\"describe\\": \\"When not used (or set to false), Wrangler will delete all vars before setting those found in the Wrangler configuration.\\\\nWhen used (and set to true), the environment variables are not deleted before the deployment.\\\\nIf you set variables via the dashboard you probably want to use this flag.\\\\nNote that secrets are never deleted by deployments.\\",
            \\"default\\": false,
            \\"type\\": \\"boolean\\"
          },
          \\"legacy-env\\": {
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Use legacy environments\\",
            \\"hidden\\": true
          },
          \\"logpush\\": {
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Send Trace Events from this Worker to Workers Logpush.\\\\nThis will not configure a corresponding Logpush job automatically.\\"
          },
          \\"upload-source-maps\\": {
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Include source maps when uploading this Worker.\\"
          },
          \\"old-asset-ttl\\": {
            \\"describe\\": \\"Expire old assets in given seconds rather than immediate deletion.\\",
            \\"type\\": \\"number\\"
          },
          \\"dispatch-namespace\\": {
            \\"describe\\": \\"Name of a dispatch namespace to deploy the Worker to (Workers for Platforms)\\",
            \\"type\\": \\"string\\"
          },
          \\"experimental-auto-create\\": {
            \\"describe\\": \\"Automatically provision draft bindings with new resources\\",
            \\"type\\": \\"boolean\\",
            \\"default\\": true,
            \\"hidden\\": true,
            \\"alias\\": \\"x-auto-create\\"
          }
        },
        \\"behaviour\\": {
          \\"useConfigRedirectIfAvailable\\": true,
          \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
        }
      },
      \\"subtree\\": {}
    },
    \\"deployments\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler deployments\\",
        \\"metadata\\": {
          \\"description\\": \\"🚢 List and view the current and past deployments for your Worker\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\"
        }
      },
      \\"subtree\\": {
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler deployments list\\",
            \\"metadata\\": {
              \\"description\\": \\"Displays the 10 most recent deployments of your Worker\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"json\\": {
                \\"describe\\": \\"Display output as clean JSON\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              }
            },
            \\"behaviour\\": {
              \\"printBanner\\": false
            }
          },
          \\"subtree\\": {}
        },
        \\"status\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler deployments status\\",
            \\"metadata\\": {
              \\"description\\": \\"View the current state of your production\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"json\\": {
                \\"describe\\": \\"Display output as clean JSON\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              }
            },
            \\"behaviour\\": {
              \\"printBanner\\": false
            }
          },
          \\"subtree\\": {}
        },
        \\"view\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler deployments view\\",
            \\"metadata\\": {
              \\"description\\": \\"View a deployment of a Worker\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\",
              \\"hidden\\": true
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"deployment-id\\": {
                \\"describe\\": \\"Deprecated. Deployment ID is now referred to as Version ID. Please use \`wrangler versions view [version-id]\` instead.\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"deployment-id\\"
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"rollback\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler rollback\\",
        \\"args\\": {
          \\"version-id\\": {
            \\"describe\\": \\"The ID of the Worker Version to rollback to\\",
            \\"type\\": \\"string\\",
            \\"demandOption\\": false
          },
          \\"name\\": {
            \\"describe\\": \\"The name of your Worker\\",
            \\"type\\": \\"string\\"
          },
          \\"message\\": {
            \\"alias\\": \\"m\\",
            \\"describe\\": \\"The reason for this rollback\\",
            \\"type\\": \\"string\\"
          },
          \\"yes\\": {
            \\"alias\\": \\"y\\",
            \\"describe\\": \\"Automatically accept defaults to prompts\\",
            \\"type\\": \\"boolean\\",
            \\"default\\": false
          }
        },
        \\"positionalArgs\\": {
          \\"0\\": \\"version-id\\"
        },
        \\"metadata\\": {
          \\"description\\": \\"🔙 Rollback a deployment for a Worker\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\"
        }
      },
      \\"subtree\\": {}
    },
    \\"versions\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler versions\\",
        \\"metadata\\": {
          \\"description\\": \\"🫧 List, view, upload and deploy Versions of your Worker to Cloudflare\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\"
        }
      },
      \\"subtree\\": {
        \\"view\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler versions view\\",
            \\"metadata\\": {
              \\"description\\": \\"View the details of a specific version of your Worker\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"version-id\\": {
                \\"describe\\": \\"The Worker Version ID to view\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"demandOption\\": true
              },
              \\"name\\": {
                \\"describe\\": \\"Name of the worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"json\\": {
                \\"describe\\": \\"Display output as clean JSON\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"version-id\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler versions list\\",
            \\"metadata\\": {
              \\"description\\": \\"List the 10 most recent Versions of your Worker\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"json\\": {
                \\"describe\\": \\"Display output as clean JSON\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"upload\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler versions upload\\",
            \\"metadata\\": {
              \\"description\\": \\"Uploads your Worker code and config as a new Version\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"script\\": {
                \\"describe\\": \\"The path to an entry point for your Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"name\\": {
                \\"describe\\": \\"Name of the worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"bundle\\": {
                \\"describe\\": \\"Run wrangler's compilation step before publishing\\",
                \\"type\\": \\"boolean\\",
                \\"hidden\\": true
              },
              \\"no-bundle\\": {
                \\"describe\\": \\"Skip internal build steps and directly deploy Worker\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              },
              \\"outdir\\": {
                \\"describe\\": \\"Output directory for the bundled Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"outfile\\": {
                \\"describe\\": \\"Output file for the bundled worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"compatibility-date\\": {
                \\"describe\\": \\"Date to use for compatibility checks\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"compatibility-flags\\": {
                \\"describe\\": \\"Flags to use for compatibility checks\\",
                \\"alias\\": \\"compatibility-flag\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"array\\": true
              },
              \\"latest\\": {
                \\"describe\\": \\"Use the latest version of the Worker runtime\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              },
              \\"assets\\": {
                \\"describe\\": \\"Static assets to be served. Replaces Workers Sites.\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"site\\": {
                \\"describe\\": \\"Root folder of static assets for Workers Sites\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"hidden\\": true,
                \\"deprecated\\": true
              },
              \\"site-include\\": {
                \\"describe\\": \\"Array of .gitignore-style patterns that match file or directory names from the sites directory. Only matched items will be uploaded.\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"array\\": true,
                \\"hidden\\": true,
                \\"deprecated\\": true
              },
              \\"site-exclude\\": {
                \\"describe\\": \\"Array of .gitignore-style patterns that match file or directory names from the sites directory. Matched items will not be uploaded.\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"array\\": true,
                \\"hidden\\": true,
                \\"deprecated\\": true
              },
              \\"var\\": {
                \\"describe\\": \\"A key-value pair to be injected into the script as a variable\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"array\\": true
              },
              \\"define\\": {
                \\"describe\\": \\"A key-value pair to be substituted in the script\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"array\\": true
              },
              \\"alias\\": {
                \\"describe\\": \\"A module pair to be substituted in the script\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"array\\": true
              },
              \\"jsx-factory\\": {
                \\"describe\\": \\"The function that is called for each JSX element\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"jsx-fragment\\": {
                \\"describe\\": \\"The function that is called for each JSX fragment\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"tsconfig\\": {
                \\"describe\\": \\"Path to a custom tsconfig.json file\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"minify\\": {
                \\"describe\\": \\"Minify the Worker\\",
                \\"type\\": \\"boolean\\"
              },
              \\"upload-source-maps\\": {
                \\"describe\\": \\"Include source maps when uploading this Worker Gradual Rollouts Version.\\",
                \\"type\\": \\"boolean\\"
              },
              \\"node-compat\\": {
                \\"describe\\": \\"Enable Node.js compatibility\\",
                \\"type\\": \\"boolean\\",
                \\"hidden\\": true,
                \\"deprecated\\": true
              },
              \\"dry-run\\": {
                \\"describe\\": \\"Don't actually deploy\\",
                \\"type\\": \\"boolean\\"
              },
              \\"tag\\": {
                \\"describe\\": \\"A tag for this Worker Gradual Rollouts Version\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"message\\": {
                \\"describe\\": \\"A descriptive message for this Worker Gradual Rollouts Version\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"preview-alias\\": {
                \\"describe\\": \\"Name of an alias for this Worker version\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"experimental-auto-create\\": {
                \\"describe\\": \\"Automatically provision draft bindings with new resources\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": true,
                \\"hidden\\": true,
                \\"alias\\": \\"x-auto-create\\"
              }
            },
            \\"behaviour\\": {
              \\"useConfigRedirectIfAvailable\\": true,
              \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
            }
          },
          \\"subtree\\": {}
        },
        \\"deploy\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler versions deploy\\",
            \\"metadata\\": {
              \\"description\\": \\"Safely roll out new Versions of your Worker by splitting traffic between multiple Versions\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\"
            },
            \\"behaviour\\": {
              \\"useConfigRedirectIfAvailable\\": true,
              \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"version-id\\": {
                \\"describe\\": \\"Worker Version ID(s) to deploy\\",
                \\"type\\": \\"string\\",
                \\"array\\": true,
                \\"requiresArg\\": true
              },
              \\"percentage\\": {
                \\"describe\\": \\"Percentage of traffic to split between Worker Version(s) (0-100)\\",
                \\"array\\": true,
                \\"type\\": \\"number\\",
                \\"requiresArg\\": true
              },
              \\"version-specs\\": {
                \\"describe\\": \\"Shorthand notation to deploy Worker Version(s) [<version-id>@<percentage>..]\\",
                \\"type\\": \\"string\\",
                \\"array\\": true
              },
              \\"message\\": {
                \\"describe\\": \\"Description of this deployment (optional)\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"yes\\": {
                \\"alias\\": \\"y\\",
                \\"describe\\": \\"Automatically accept defaults to prompts\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              },
              \\"dry-run\\": {
                \\"describe\\": \\"Don't actually deploy\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              },
              \\"max-versions\\": {
                \\"hidden\\": true,
                \\"describe\\": \\"Maximum allowed versions to select\\",
                \\"type\\": \\"number\\",
                \\"default\\": 2
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"version-specs\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"secret\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler versions secret\\",
            \\"metadata\\": {
              \\"description\\": \\"Generate a secret that can be referenced in a Worker\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\"
            }
          },
          \\"subtree\\": {
            \\"put\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler versions secret put\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create or update a secret variable for a Worker\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"status\\": \\"stable\\"
                },
                \\"behaviour\\": {
                  \\"printConfigWarnings\\": false,
                  \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
                },
                \\"args\\": {
                  \\"key\\": {
                    \\"describe\\": \\"The variable name to be accessible in the Worker\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  },
                  \\"name\\": {
                    \\"describe\\": \\"Name of the Worker\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  },
                  \\"message\\": {
                    \\"describe\\": \\"Description of this deployment\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  },
                  \\"tag\\": {
                    \\"describe\\": \\"A tag for this version\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"key\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"bulk\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler versions secret bulk\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create or update a secret variable for a Worker\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"status\\": \\"stable\\"
                },
                \\"behaviour\\": {
                  \\"printConfigWarnings\\": false,
                  \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
                },
                \\"args\\": {
                  \\"file\\": {
                    \\"describe\\": \\"The file of key-value pairs to upload, as JSON in form {\\\\\\"key\\\\\\": value, ...} or .dev.vars file in the form KEY=VALUE\\",
                    \\"type\\": \\"string\\"
                  },
                  \\"name\\": {
                    \\"describe\\": \\"Name of the Worker\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  },
                  \\"message\\": {
                    \\"describe\\": \\"Description of this deployment\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  },
                  \\"tag\\": {
                    \\"describe\\": \\"A tag for this version\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"file\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler versions secret delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Delete a secret variable from a Worker\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"status\\": \\"stable\\"
                },
                \\"behaviour\\": {
                  \\"printConfigWarnings\\": false,
                  \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
                },
                \\"args\\": {
                  \\"key\\": {
                    \\"describe\\": \\"The variable name to be accessible in the Worker\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  },
                  \\"name\\": {
                    \\"describe\\": \\"Name of the Worker\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  },
                  \\"message\\": {
                    \\"describe\\": \\"Description of this deployment\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  },
                  \\"tag\\": {
                    \\"describe\\": \\"A tag for this version\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"key\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler versions secret list\\",
                \\"metadata\\": {
                  \\"description\\": \\"List the secrets currently deployed\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"status\\": \\"stable\\"
                },
                \\"behaviour\\": {
                  \\"printConfigWarnings\\": false
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"describe\\": \\"Name of the Worker\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  },
                  \\"latest-version\\": {
                    \\"describe\\": \\"Only show the latest version\\",
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        }
      }
    },
    \\"triggers\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler triggers\\",
        \\"metadata\\": {
          \\"description\\": \\"🎯 Updates the triggers of your current deployment\\",
          \\"status\\": \\"experimental\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\"
        }
      },
      \\"subtree\\": {
        \\"deploy\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler triggers deploy\\",
            \\"metadata\\": {
              \\"description\\": \\"Updates the triggers of your current deployment\\",
              \\"status\\": \\"experimental\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"triggers\\": {
                \\"describe\\": \\"cron schedules to attach\\",
                \\"alias\\": {
                  \\"0\\": \\"schedule\\",
                  \\"1\\": \\"schedules\\"
                },
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"array\\": true
              },
              \\"routes\\": {
                \\"describe\\": \\"Routes to upload\\",
                \\"alias\\": \\"route\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true,
                \\"array\\": true
              },
              \\"dry-run\\": {
                \\"describe\\": \\"Don't actually deploy\\",
                \\"type\\": \\"boolean\\"
              },
              \\"legacy-env\\": {
                \\"type\\": \\"boolean\\",
                \\"describe\\": \\"Use legacy environments\\",
                \\"hidden\\": true
              }
            },
            \\"behaviour\\": {
              \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"delete\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler delete\\",
        \\"metadata\\": {
          \\"description\\": \\"🗑  Delete a Worker from Cloudflare\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\"
        },
        \\"args\\": {
          \\"script\\": {
            \\"describe\\": \\"The path to an entry point for your worker\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"name\\": {
            \\"describe\\": \\"Name of the worker\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"dry-run\\": {
            \\"describe\\": \\"Don't actually delete\\",
            \\"type\\": \\"boolean\\"
          },
          \\"force\\": {
            \\"describe\\": \\"Delete even if doing so will break other Workers that depend on this one\\",
            \\"type\\": \\"boolean\\"
          },
          \\"legacy-env\\": {
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Use legacy environments\\",
            \\"hidden\\": true
          }
        },
        \\"positionalArgs\\": {
          \\"0\\": \\"script\\"
        }
      },
      \\"subtree\\": {}
    },
    \\"tail\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler tail\\",
        \\"metadata\\": {
          \\"description\\": \\"🦚 Start a log tailing session for a Worker\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Workers: Workers Observability\\"
        },
        \\"positionalArgs\\": {
          \\"0\\": \\"worker\\"
        },
        \\"args\\": {
          \\"worker\\": {
            \\"describe\\": \\"Name or route of the worker to tail\\",
            \\"type\\": \\"string\\"
          },
          \\"format\\": {
            \\"choices\\": {
              \\"0\\": \\"json\\",
              \\"1\\": \\"pretty\\"
            },
            \\"describe\\": \\"The format of log entries\\"
          },
          \\"status\\": {
            \\"choices\\": {
              \\"0\\": \\"ok\\",
              \\"1\\": \\"error\\",
              \\"2\\": \\"canceled\\"
            },
            \\"describe\\": \\"Filter by invocation status\\",
            \\"array\\": true
          },
          \\"header\\": {
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"describe\\": \\"Filter by HTTP header\\"
          },
          \\"method\\": {
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"describe\\": \\"Filter by HTTP method\\",
            \\"array\\": true
          },
          \\"sampling-rate\\": {
            \\"type\\": \\"number\\",
            \\"describe\\": \\"Adds a percentage of requests to log sampling rate\\"
          },
          \\"search\\": {
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"describe\\": \\"Filter by a text match in console.log messages\\"
          },
          \\"ip\\": {
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"describe\\": \\"Filter by the IP address the request originates from. Use \\\\\\"self\\\\\\" to filter for your own IP\\",
            \\"array\\": true
          },
          \\"version-id\\": {
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true,
            \\"describe\\": \\"Filter by Worker version\\"
          },
          \\"debug\\": {
            \\"type\\": \\"boolean\\",
            \\"hidden\\": true,
            \\"default\\": false,
            \\"describe\\": \\"If a log would have been filtered out, send it through anyway alongside the filter which would have blocked it.\\"
          },
          \\"legacy-env\\": {
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Use legacy environments\\",
            \\"hidden\\": true
          }
        },
        \\"behaviour\\": {
          \\"printBanner\\": false
        }
      },
      \\"subtree\\": {}
    },
    \\"secret\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler secret\\",
        \\"metadata\\": {
          \\"description\\": \\"🤫 Generate a secret that can be referenced in a Worker\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Workers: Deploy and Config\\"
        }
      },
      \\"subtree\\": {
        \\"put\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler secret put\\",
            \\"metadata\\": {
              \\"description\\": \\"Create or update a secret variable for a Worker\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Deploy and Config\\"
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"key\\"
            },
            \\"behaviour\\": {
              \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
            },
            \\"args\\": {
              \\"key\\": {
                \\"describe\\": \\"The variable name to be accessible in the Worker\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              },
              \\"name\\": {
                \\"describe\\": \\"Name of the Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"legacy-env\\": {
                \\"type\\": \\"boolean\\",
                \\"describe\\": \\"Use legacy environments\\",
                \\"hidden\\": true
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler secret delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete a secret variable from a Worker\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Deploy and Config\\"
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"key\\"
            },
            \\"behaviour\\": {
              \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
            },
            \\"args\\": {
              \\"key\\": {
                \\"describe\\": \\"The variable name to be accessible in the Worker\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              },
              \\"name\\": {
                \\"describe\\": \\"Name of the Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"legacy-env\\": {
                \\"type\\": \\"boolean\\",
                \\"describe\\": \\"Use legacy environments\\",
                \\"hidden\\": true
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler secret list\\",
            \\"metadata\\": {
              \\"description\\": \\"List all secrets for a Worker\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Deploy and Config\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"format\\": {
                \\"default\\": \\"json\\",
                \\"choices\\": {
                  \\"0\\": \\"json\\",
                  \\"1\\": \\"pretty\\"
                },
                \\"describe\\": \\"The format to print the secrets in\\"
              },
              \\"legacy-env\\": {
                \\"type\\": \\"boolean\\",
                \\"describe\\": \\"Use legacy environments\\",
                \\"hidden\\": true
              }
            },
            \\"behaviour\\": {}
          },
          \\"subtree\\": {}
        },
        \\"bulk\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler secret bulk\\",
            \\"metadata\\": {
              \\"description\\": \\"Bulk upload secrets for a Worker\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Deploy and Config\\"
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"file\\"
            },
            \\"behaviour\\": {
              \\"warnIfMultipleEnvsConfiguredButNoneSpecified\\": true
            },
            \\"args\\": {
              \\"file\\": {
                \\"describe\\": \\"The file of key-value pairs to upload, as JSON in form {\\\\\\"key\\\\\\": value, ...} or .dev.vars file in the form KEY=VALUE\\",
                \\"type\\": \\"string\\"
              },
              \\"name\\": {
                \\"describe\\": \\"Name of the Worker\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"legacy-env\\": {
                \\"type\\": \\"boolean\\",
                \\"describe\\": \\"Use legacy environments\\",
                \\"hidden\\": true
              }
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"types\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler types\\",
        \\"metadata\\": {
          \\"description\\": \\"📝 Generate types from your Worker configuration\\\\n\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"epilogue\\": \\"📖 Learn more at https://developers.cloudflare.com/workers/languages/typescript/#generate-types\\"
        },
        \\"behaviour\\": {
          \\"provideConfig\\": false
        },
        \\"positionalArgs\\": {
          \\"0\\": \\"path\\"
        },
        \\"args\\": {
          \\"path\\": {
            \\"describe\\": \\"The path to the declaration file for the generated types\\",
            \\"type\\": \\"string\\",
            \\"default\\": \\"worker-configuration.d.ts\\",
            \\"demandOption\\": false
          },
          \\"env-interface\\": {
            \\"type\\": \\"string\\",
            \\"default\\": \\"Env\\",
            \\"describe\\": \\"The name of the generated environment interface\\",
            \\"requiresArg\\": true
          },
          \\"include-runtime\\": {
            \\"type\\": \\"boolean\\",
            \\"default\\": true,
            \\"describe\\": \\"Include runtime types in the generated types\\"
          },
          \\"include-env\\": {
            \\"type\\": \\"boolean\\",
            \\"default\\": true,
            \\"describe\\": \\"Include Env types in the generated types\\"
          },
          \\"strict-vars\\": {
            \\"type\\": \\"boolean\\",
            \\"default\\": true,
            \\"describe\\": \\"Generate literal and union types for variables\\"
          },
          \\"experimental-include-runtime\\": {
            \\"alias\\": \\"x-include-runtime\\",
            \\"type\\": \\"string\\",
            \\"describe\\": \\"The path of the generated runtime types file\\",
            \\"demandOption\\": false,
            \\"hidden\\": true,
            \\"deprecated\\": true
          }
        }
      },
      \\"subtree\\": {}
    },
    \\"kv\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler kv\\",
        \\"metadata\\": {
          \\"description\\": \\"🗂️  Manage Workers KV Namespaces\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Product: KV\\"
        }
      },
      \\"subtree\\": {
        \\"namespace\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler kv namespace\\",
            \\"metadata\\": {
              \\"description\\": \\"Interact with your Workers KV Namespaces\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: KV\\"
            }
          },
          \\"subtree\\": {
            \\"create\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv namespace create\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create a new namespace\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"args\\": {
                  \\"namespace\\": {
                    \\"describe\\": \\"The name of the new namespace\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with a preview namespace\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"namespace\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv namespace list\\",
                \\"metadata\\": {
                  \\"description\\": \\"Output a list of all KV namespaces associated with your account id\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"args\\": {},
                \\"behaviour\\": {
                  \\"printBanner\\": false,
                  \\"printResourceLocation\\": false
                }
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv namespace delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Delete a given namespace.\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"args\\": {
                  \\"binding\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The binding name to the namespace to delete from\\"
                  },
                  \\"namespace-id\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The id of the namespace to delete\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with a preview namespace\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"rename\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv namespace rename\\",
                \\"metadata\\": {
                  \\"description\\": \\"Rename a KV namespace\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"old-name\\"
                },
                \\"args\\": {
                  \\"old-name\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"The current name (title) of the namespace to rename\\"
                  },
                  \\"namespace-id\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"The id of the namespace to rename\\"
                  },
                  \\"new-name\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"The new name for the namespace\\",
                    \\"demandOption\\": true
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"key\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler kv key\\",
            \\"metadata\\": {
              \\"description\\": \\"Individually manage Workers KV key-value pairs\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: KV\\"
            }
          },
          \\"subtree\\": {
            \\"put\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv key put\\",
                \\"metadata\\": {
                  \\"description\\": \\"Write a single key/value pair to the given namespace\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"behaviour\\": {
                  \\"printResourceLocation\\": true
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"key\\",
                  \\"1\\": \\"value\\"
                },
                \\"args\\": {
                  \\"key\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"The key to write to\\",
                    \\"demandOption\\": true
                  },
                  \\"value\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"The value to write\\"
                  },
                  \\"binding\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The binding name to the namespace to write to\\"
                  },
                  \\"namespace-id\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The id of the namespace to write to\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with a preview namespace\\"
                  },
                  \\"ttl\\": {
                    \\"type\\": \\"number\\",
                    \\"describe\\": \\"Time for which the entries should be visible\\"
                  },
                  \\"expiration\\": {
                    \\"type\\": \\"number\\",
                    \\"describe\\": \\"Time since the UNIX epoch after which the entry expires\\"
                  },
                  \\"metadata\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Arbitrary JSON that is associated with a key\\"
                  },
                  \\"path\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"Read value from the file at a given path\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv key list\\",
                \\"metadata\\": {
                  \\"description\\": \\"Output a list of all keys in a given namespace\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"behaviour\\": {
                  \\"printResourceLocation\\": false,
                  \\"printBanner\\": false
                },
                \\"args\\": {
                  \\"binding\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The binding name to the namespace to list\\"
                  },
                  \\"namespace-id\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The id of the namespace to list\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false,
                    \\"describe\\": \\"Interact with a preview namespace\\"
                  },
                  \\"prefix\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"A prefix to filter listed keys\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"get\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv key get\\",
                \\"metadata\\": {
                  \\"description\\": \\"Read a single value by key from the given namespace\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"behaviour\\": {
                  \\"printBanner\\": false,
                  \\"printResourceLocation\\": false
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"key\\"
                },
                \\"args\\": {
                  \\"key\\": {
                    \\"describe\\": \\"The key value to get.\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"binding\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The binding name to the namespace to get from\\"
                  },
                  \\"namespace-id\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The id of the namespace to get from\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false,
                    \\"describe\\": \\"Interact with a preview namespace\\"
                  },
                  \\"text\\": {
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false,
                    \\"describe\\": \\"Decode the returned value as a utf8 string\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv key delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Remove a single key value pair from the given namespace\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"behaviour\\": {
                  \\"printResourceLocation\\": true
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"key\\"
                },
                \\"args\\": {
                  \\"key\\": {
                    \\"describe\\": \\"The key value to delete.\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"binding\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The binding name to the namespace to delete from\\"
                  },
                  \\"namespace-id\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The id of the namespace to delete from\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with a preview namespace\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"bulk\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler kv bulk\\",
            \\"metadata\\": {
              \\"description\\": \\"Interact with multiple Workers KV key-value pairs at once\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: KV\\"
            }
          },
          \\"subtree\\": {
            \\"get\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv bulk get\\",
                \\"metadata\\": {
                  \\"description\\": \\"Gets multiple key-value pairs from a namespace\\",
                  \\"status\\": \\"open-beta\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"behaviour\\": {
                  \\"printBanner\\": false,
                  \\"printResourceLocation\\": false
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"filename\\"
                },
                \\"args\\": {
                  \\"filename\\": {
                    \\"describe\\": \\"The file containing the keys to get\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"binding\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The binding name to the namespace to get from\\"
                  },
                  \\"namespace-id\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The id of the namespace to get from\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with a preview namespace\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"put\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv bulk put\\",
                \\"metadata\\": {
                  \\"description\\": \\"Upload multiple key-value pairs to a namespace\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"behaviour\\": {
                  \\"printResourceLocation\\": true
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"filename\\"
                },
                \\"args\\": {
                  \\"filename\\": {
                    \\"describe\\": \\"The file containing the key/value pairs to write\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"binding\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The binding name to the namespace to write to\\"
                  },
                  \\"namespace-id\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The id of the namespace to write to\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with a preview namespace\\"
                  },
                  \\"ttl\\": {
                    \\"type\\": \\"number\\",
                    \\"describe\\": \\"Time for which the entries should be visible\\"
                  },
                  \\"expiration\\": {
                    \\"type\\": \\"number\\",
                    \\"describe\\": \\"Time since the UNIX epoch after which the entry expires\\"
                  },
                  \\"metadata\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Arbitrary JSON that is associated with a key\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler kv bulk delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Delete multiple key-value pairs from a namespace\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: KV\\"
                },
                \\"behaviour\\": {
                  \\"printResourceLocation\\": true
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"filename\\"
                },
                \\"args\\": {
                  \\"filename\\": {
                    \\"describe\\": \\"The file containing the keys to delete\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"binding\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The binding name to the namespace to delete from\\"
                  },
                  \\"namespace-id\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"describe\\": \\"The id of the namespace to delete from\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with a preview namespace\\"
                  },
                  \\"force\\": {
                    \\"type\\": \\"boolean\\",
                    \\"alias\\": \\"f\\",
                    \\"describe\\": \\"Do not ask for confirmation before deleting\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        }
      }
    },
    \\"queues\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler queues\\",
        \\"metadata\\": {
          \\"description\\": \\"📬 Manage Workers Queues\\",
          \\"owner\\": \\"Product: Queues\\",
          \\"status\\": \\"stable\\"
        }
      },
      \\"subtree\\": {
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler queues list\\",
            \\"metadata\\": {
              \\"description\\": \\"List Queues\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Queues\\"
            },
            \\"args\\": {
              \\"page\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"Page number for pagination\\"
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"create\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler queues create\\",
            \\"metadata\\": {
              \\"description\\": \\"Create a Queue\\",
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the queue\\"
              },
              \\"delivery-delay-secs\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"How long a published message should be delayed for, in seconds. Must be between 0 and 42300\\",
                \\"default\\": 0
              },
              \\"message-retention-period-secs\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"How long to retain a message in the queue, in seconds. Must be between 60 and 1209600\\",
                \\"default\\": 345600
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"update\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler queues update\\",
            \\"metadata\\": {
              \\"description\\": \\"Update a Queue\\",
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the queue\\"
              },
              \\"delivery-delay-secs\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"How long a published message should be delayed for, in seconds. Must be between 0 and 42300\\"
              },
              \\"message-retention-period-secs\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"How long to retain a message in the queue, in seconds. Must be between 60 and 1209600\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler queues delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete a Queue\\",
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the queue\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"info\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler queues info\\",
            \\"metadata\\": {
              \\"description\\": \\"Get Queue information\\",
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the queue\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"consumer\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler queues consumer\\",
            \\"metadata\\": {
              \\"description\\": \\"Configure Queue consumers\\",
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"stable\\"
            }
          },
          \\"subtree\\": {
            \\"add\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler queues consumer add\\",
                \\"metadata\\": {
                  \\"description\\": \\"Add a Queue Worker Consumer\\",
                  \\"owner\\": \\"Product: Queues\\",
                  \\"status\\": \\"stable\\"
                },
                \\"args\\": {
                  \\"queue-name\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"Name of the queue to configure\\"
                  },
                  \\"script-name\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"Name of the consumer script\\"
                  },
                  \\"batch-size\\": {
                    \\"type\\": \\"number\\",
                    \\"describe\\": \\"Maximum number of messages per batch\\"
                  },
                  \\"batch-timeout\\": {
                    \\"type\\": \\"number\\",
                    \\"describe\\": \\"Maximum number of seconds to wait to fill a batch with messages\\"
                  },
                  \\"message-retries\\": {
                    \\"type\\": \\"number\\",
                    \\"describe\\": \\"Maximum number of retries for each message\\"
                  },
                  \\"dead-letter-queue\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Queue to send messages that failed to be consumed\\"
                  },
                  \\"max-concurrency\\": {
                    \\"type\\": \\"number\\",
                    \\"describe\\": \\"The maximum number of concurrent consumer Worker invocations. Must be a positive integer\\"
                  },
                  \\"retry-delay-secs\\": {
                    \\"type\\": \\"number\\",
                    \\"describe\\": \\"The number of seconds to wait before retrying a message\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"queue-name\\",
                  \\"1\\": \\"script-name\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"remove\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler queues consumer remove\\",
                \\"metadata\\": {
                  \\"description\\": \\"Remove a Queue Worker Consumer\\",
                  \\"owner\\": \\"Product: Queues\\",
                  \\"status\\": \\"stable\\"
                },
                \\"args\\": {
                  \\"queue-name\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"Name of the queue to configure\\"
                  },
                  \\"script-name\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"Name of the consumer script\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"queue-name\\",
                  \\"1\\": \\"script-name\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"http\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler queues consumer http\\",
                \\"metadata\\": {
                  \\"description\\": \\"Configure Queue HTTP Pull Consumers\\",
                  \\"owner\\": \\"Product: Queues\\",
                  \\"status\\": \\"stable\\"
                }
              },
              \\"subtree\\": {
                \\"add\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler queues consumer http add\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Add a Queue HTTP Pull Consumer\\",
                      \\"owner\\": \\"Product: Queues\\",
                      \\"status\\": \\"stable\\"
                    },
                    \\"args\\": {
                      \\"queue-name\\": {
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"description\\": \\"Name of the queue for the consumer\\"
                      },
                      \\"batch-size\\": {
                        \\"type\\": \\"number\\",
                        \\"description\\": \\"Maximum number of messages per batch\\"
                      },
                      \\"message-retries\\": {
                        \\"type\\": \\"number\\",
                        \\"description\\": \\"Maximum number of retries for each message\\"
                      },
                      \\"dead-letter-queue\\": {
                        \\"type\\": \\"string\\",
                        \\"description\\": \\"Queue to send messages that failed to be consumed\\"
                      },
                      \\"visibility-timeout-secs\\": {
                        \\"type\\": \\"number\\",
                        \\"description\\": \\"The number of seconds a message will wait for an acknowledgement before being returned to the queue.\\"
                      },
                      \\"retry-delay-secs\\": {
                        \\"type\\": \\"number\\",
                        \\"description\\": \\"The number of seconds to wait before retrying a message\\"
                      }
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"queue-name\\"
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"remove\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler queues consumer http remove\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Remove a Queue HTTP Pull Consumer\\",
                      \\"owner\\": \\"Product: Queues\\",
                      \\"status\\": \\"stable\\"
                    },
                    \\"args\\": {
                      \\"queue-name\\": {
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"description\\": \\"Name of the queue for the consumer\\"
                      }
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"queue-name\\"
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            },
            \\"worker\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler queues consumer worker\\",
                \\"metadata\\": {
                  \\"description\\": \\"Configure Queue Worker Consumers\\",
                  \\"owner\\": \\"Product: Queues\\",
                  \\"status\\": \\"stable\\"
                }
              },
              \\"subtree\\": {
                \\"add\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler queues consumer worker add\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Add a Queue Worker Consumer\\",
                      \\"owner\\": \\"Product: Queues\\",
                      \\"status\\": \\"stable\\"
                    },
                    \\"args\\": {
                      \\"queue-name\\": {
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"description\\": \\"Name of the queue to configure\\"
                      },
                      \\"script-name\\": {
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"description\\": \\"Name of the consumer script\\"
                      },
                      \\"batch-size\\": {
                        \\"type\\": \\"number\\",
                        \\"describe\\": \\"Maximum number of messages per batch\\"
                      },
                      \\"batch-timeout\\": {
                        \\"type\\": \\"number\\",
                        \\"describe\\": \\"Maximum number of seconds to wait to fill a batch with messages\\"
                      },
                      \\"message-retries\\": {
                        \\"type\\": \\"number\\",
                        \\"describe\\": \\"Maximum number of retries for each message\\"
                      },
                      \\"dead-letter-queue\\": {
                        \\"type\\": \\"string\\",
                        \\"describe\\": \\"Queue to send messages that failed to be consumed\\"
                      },
                      \\"max-concurrency\\": {
                        \\"type\\": \\"number\\",
                        \\"describe\\": \\"The maximum number of concurrent consumer Worker invocations. Must be a positive integer\\"
                      },
                      \\"retry-delay-secs\\": {
                        \\"type\\": \\"number\\",
                        \\"describe\\": \\"The number of seconds to wait before retrying a message\\"
                      }
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"queue-name\\",
                      \\"1\\": \\"script-name\\"
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"remove\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler queues consumer worker remove\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Remove a Queue Worker Consumer\\",
                      \\"owner\\": \\"Product: Queues\\",
                      \\"status\\": \\"stable\\"
                    },
                    \\"args\\": {
                      \\"queue-name\\": {
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"description\\": \\"Name of the queue to configure\\"
                      },
                      \\"script-name\\": {
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"description\\": \\"Name of the consumer script\\"
                      }
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"queue-name\\",
                      \\"1\\": \\"script-name\\"
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            }
          }
        },
        \\"pause-delivery\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler queues pause-delivery\\",
            \\"metadata\\": {
              \\"description\\": \\"Pause message delivery for a Queue\\",
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the queue\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"resume-delivery\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler queues resume-delivery\\",
            \\"metadata\\": {
              \\"description\\": \\"Resume message delivery for a Queue\\",
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the queue\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"purge\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler queues purge\\",
            \\"metadata\\": {
              \\"description\\": \\"Purge messages from a Queue\\",
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the queue\\"
              },
              \\"force\\": {
                \\"describe\\": \\"Skip the confirmation dialog and forcefully purge the Queue\\",
                \\"type\\": \\"boolean\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"event-subscriptions\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler event-subscriptions\\",
        \\"metadata\\": {
          \\"hidden\\": true,
          \\"owner\\": \\"Product: Queues\\",
          \\"status\\": \\"open-beta\\",
          \\"description\\": \\"🔔 Manage Event Subscriptions\\"
        }
      },
      \\"subtree\\": {
        \\"browse\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler event-subscriptions browse\\",
            \\"metadata\\": {
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"open-beta\\",
              \\"description\\": \\"Explore available sources and events\\"
            },
            \\"args\\": {
              \\"source\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"A comma-separated list of source services to filter by\\",
                \\"array\\": true,
                \\"demandOption\\": false
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler event-subscriptions list\\",
            \\"metadata\\": {
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"open-beta\\",
              \\"description\\": \\"List configured Event Subscriptions\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"create\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler event-subscriptions create\\",
            \\"metadata\\": {
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"open-beta\\",
              \\"description\\": \\"Create a new Event Subscription\\"
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Name of the subscription\\",
                \\"demandOption\\": true
              },
              \\"source\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The service & resource to create the subscription on. Use \`event-subscriptions browse\` to see available sources and events.\\",
                \\"demandOption\\": true
              },
              \\"destination\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"ID of the Queue to send events to\\",
                \\"demandOption\\": true
              },
              \\"events\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Names of events to subscribe to\\",
                \\"demandOption\\": true
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"update\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler event-subscriptions update\\",
            \\"metadata\\": {
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"private-beta\\",
              \\"description\\": \\"Update an event subscription\\"
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"id\\"
            },
            \\"args\\": {
              \\"id\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"ID of the event subscription\\",
                \\"demandOption\\": true
              },
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"New name of the subscription\\"
              },
              \\"destination\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"ID of the Queue to send events to\\"
              },
              \\"events\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Names of events to subscribe to\\"
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler event-subscriptions delete\\",
            \\"metadata\\": {
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"open-beta\\",
              \\"description\\": \\"<TBD>\\"
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"id\\"
            },
            \\"args\\": {
              \\"id\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"ID of the event subscription\\",
                \\"demandOption\\": true
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"get\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler event-subscriptions get\\",
            \\"metadata\\": {
              \\"owner\\": \\"Product: Queues\\",
              \\"status\\": \\"open-beta\\",
              \\"description\\": \\"Fetch details about a single Event Subscription\\"
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"id\\"
            },
            \\"args\\": {
              \\"id\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"ID of the Event Subscription\\",
                \\"demandOption\\": true
              }
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"r2\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler r2\\",
        \\"metadata\\": {
          \\"description\\": \\"📦 Manage R2 buckets & objects\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Product: R2\\"
        }
      },
      \\"subtree\\": {
        \\"object\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler r2 object\\",
            \\"metadata\\": {
              \\"description\\": \\"Manage R2 objects\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: R2\\"
            }
          },
          \\"subtree\\": {
            \\"get\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler r2 object get\\",
                \\"metadata\\": {
                  \\"description\\": \\"Fetch an object from an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                },
                \\"args\\": {
                  \\"objectPath\\": {
                    \\"describe\\": \\"The source object path in the form of {bucket}/{key}\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"file\\": {
                    \\"describe\\": \\"The destination file to create\\",
                    \\"alias\\": \\"f\\",
                    \\"conflicts\\": \\"pipe\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"pipe\\": {
                    \\"describe\\": \\"Enables the file to be piped to a destination, rather than specified with the --file option\\",
                    \\"alias\\": \\"p\\",
                    \\"conflicts\\": \\"file\\",
                    \\"type\\": \\"boolean\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  },
                  \\"jurisdiction\\": {
                    \\"describe\\": \\"The jurisdiction where the object exists\\",
                    \\"alias\\": \\"J\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  }
                },
                \\"behaviour\\": {},
                \\"positionalArgs\\": {
                  \\"0\\": \\"objectPath\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"put\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler r2 object put\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create an object in an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"objectPath\\"
                },
                \\"args\\": {
                  \\"objectPath\\": {
                    \\"describe\\": \\"The destination object path in the form of {bucket}/{key}\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"file\\": {
                    \\"describe\\": \\"The path of the file to upload\\",
                    \\"alias\\": \\"f\\",
                    \\"conflicts\\": \\"pipe\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"pipe\\": {
                    \\"describe\\": \\"Enables the file to be piped in, rather than specified with the --file option\\",
                    \\"alias\\": \\"p\\",
                    \\"conflicts\\": \\"file\\",
                    \\"type\\": \\"boolean\\"
                  },
                  \\"content-type\\": {
                    \\"describe\\": \\"A standard MIME type describing the format of the object data\\",
                    \\"alias\\": \\"ct\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"content-disposition\\": {
                    \\"describe\\": \\"Specifies presentational information for the object\\",
                    \\"alias\\": \\"cd\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"content-encoding\\": {
                    \\"describe\\": \\"Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field\\",
                    \\"alias\\": \\"ce\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"content-language\\": {
                    \\"describe\\": \\"The language the content is in\\",
                    \\"alias\\": \\"cl\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"cache-control\\": {
                    \\"describe\\": \\"Specifies caching behavior along the request/reply chain\\",
                    \\"alias\\": \\"cc\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"expires\\": {
                    \\"describe\\": \\"The date and time at which the object is no longer cacheable\\",
                    \\"alias\\": \\"e\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  },
                  \\"jurisdiction\\": {
                    \\"describe\\": \\"The jurisdiction where the object will be created\\",
                    \\"alias\\": \\"J\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"storage-class\\": {
                    \\"describe\\": \\"The storage class of the object to be created\\",
                    \\"alias\\": \\"s\\",
                    \\"requiresArg\\": false,
                    \\"type\\": \\"string\\"
                  }
                },
                \\"behaviour\\": {}
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler r2 object delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Delete an object in an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"objectPath\\"
                },
                \\"args\\": {
                  \\"objectPath\\": {
                    \\"describe\\": \\"The destination object path in the form of {bucket}/{key}\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with local storage\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"describe\\": \\"Interact with remote storage\\",
                    \\"conflicts\\": \\"local\\"
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  },
                  \\"jurisdiction\\": {
                    \\"describe\\": \\"The jurisdiction where the object exists\\",
                    \\"alias\\": \\"J\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  }
                },
                \\"behaviour\\": {
                  \\"printResourceLocation\\": true
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"bucket\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler r2 bucket\\",
            \\"metadata\\": {
              \\"description\\": \\"Manage R2 buckets\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: R2\\"
            }
          },
          \\"subtree\\": {
            \\"create\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler r2 bucket create\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create a new R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"name\\"
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"describe\\": \\"The name of the new bucket\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"location\\": {
                    \\"describe\\": \\"The optional location hint that determines geographic placement of the R2 bucket\\",
                    \\"choices\\": {
                      \\"0\\": \\"weur\\",
                      \\"1\\": \\"eeur\\",
                      \\"2\\": \\"apac\\",
                      \\"3\\": \\"wnam\\",
                      \\"4\\": \\"enam\\",
                      \\"5\\": \\"oc\\"
                    },
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"storage-class\\": {
                    \\"describe\\": \\"The default storage class for objects uploaded to this bucket\\",
                    \\"alias\\": \\"s\\",
                    \\"requiresArg\\": false,
                    \\"type\\": \\"string\\"
                  },
                  \\"jurisdiction\\": {
                    \\"describe\\": \\"The jurisdiction where the new bucket will be created\\",
                    \\"alias\\": \\"J\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"update\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler r2 bucket update\\",
                \\"metadata\\": {
                  \\"description\\": \\"Update bucket state\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                }
              },
              \\"subtree\\": {
                \\"storage-class\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket update storage-class\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Update the default storage class of an existing R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"name\\"
                    },
                    \\"args\\": {
                      \\"name\\": {
                        \\"describe\\": \\"The name of the existing bucket\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction of the bucket to be updated\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"storage-class\\": {
                        \\"describe\\": \\"The new default storage class for this bucket\\",
                        \\"alias\\": \\"s\\",
                        \\"demandOption\\": true,
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            },
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler r2 bucket list\\",
                \\"metadata\\": {
                  \\"description\\": \\"List R2 buckets\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                },
                \\"args\\": {
                  \\"jurisdiction\\": {
                    \\"describe\\": \\"The jurisdiction to list\\",
                    \\"alias\\": \\"J\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"info\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler r2 bucket info\\",
                \\"metadata\\": {
                  \\"description\\": \\"Get information about an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"bucket\\"
                },
                \\"args\\": {
                  \\"bucket\\": {
                    \\"describe\\": \\"The name of the bucket to retrieve info for\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"jurisdiction\\": {
                    \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                    \\"alias\\": \\"J\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  },
                  \\"json\\": {
                    \\"describe\\": \\"Return the bucket information as JSON\\",
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false
                  }
                },
                \\"behaviour\\": {}
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler r2 bucket delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Delete an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"bucket\\"
                },
                \\"args\\": {
                  \\"bucket\\": {
                    \\"describe\\": \\"The name of the bucket to delete\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"jurisdiction\\": {
                    \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                    \\"alias\\": \\"J\\",
                    \\"requiresArg\\": true,
                    \\"type\\": \\"string\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"sippy\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler r2 bucket sippy\\",
                \\"metadata\\": {
                  \\"description\\": \\"Manage Sippy incremental migration on an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                }
              },
              \\"subtree\\": {
                \\"enable\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket sippy enable\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Enable Sippy on an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"name\\"
                    },
                    \\"args\\": {
                      \\"name\\": {
                        \\"describe\\": \\"The name of the bucket\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"provider\\": {
                        \\"choices\\": {
                          \\"0\\": \\"AWS\\",
                          \\"1\\": \\"GCS\\"
                        }
                      },
                      \\"bucket\\": {
                        \\"description\\": \\"The name of the upstream bucket\\",
                        \\"type\\": \\"string\\"
                      },
                      \\"region\\": {
                        \\"description\\": \\"(AWS provider only) The region of the upstream bucket\\",
                        \\"type\\": \\"string\\"
                      },
                      \\"access-key-id\\": {
                        \\"description\\": \\"(AWS provider only) The secret access key id for the upstream bucket\\",
                        \\"type\\": \\"string\\"
                      },
                      \\"secret-access-key\\": {
                        \\"description\\": \\"(AWS provider only) The secret access key for the upstream bucket\\",
                        \\"type\\": \\"string\\"
                      },
                      \\"service-account-key-file\\": {
                        \\"description\\": \\"(GCS provider only) The path to your Google Cloud service account key JSON file\\",
                        \\"type\\": \\"string\\"
                      },
                      \\"client-email\\": {
                        \\"description\\": \\"(GCS provider only) The client email for your Google Cloud service account key\\",
                        \\"type\\": \\"string\\"
                      },
                      \\"private-key\\": {
                        \\"description\\": \\"(GCS provider only) The private key for your Google Cloud service account key\\",
                        \\"type\\": \\"string\\"
                      },
                      \\"r2-access-key-id\\": {
                        \\"description\\": \\"The secret access key id for this R2 bucket\\",
                        \\"type\\": \\"string\\"
                      },
                      \\"r2-secret-access-key\\": {
                        \\"description\\": \\"The secret access key for this R2 bucket\\",
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"disable\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket sippy disable\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Disable Sippy on an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"name\\"
                    },
                    \\"args\\": {
                      \\"name\\": {
                        \\"describe\\": \\"The name of the bucket\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"get\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket sippy get\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Check the status of Sippy on an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"name\\"
                    },
                    \\"args\\": {
                      \\"name\\": {
                        \\"describe\\": \\"The name of the bucket\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            },
            \\"catalog\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler r2 bucket catalog\\",
                \\"metadata\\": {
                  \\"description\\": \\"Manage the data catalog for your R2 buckets - provides an Iceberg REST interface for query engines like Spark and PyIceberg\\",
                  \\"status\\": \\"open-beta\\",
                  \\"owner\\": \\"Product: R2 Data Catalog\\"
                }
              },
              \\"subtree\\": {
                \\"enable\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket catalog enable\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Enable the data catalog on an R2 bucket\\",
                      \\"status\\": \\"open-beta\\",
                      \\"owner\\": \\"Product: R2 Data Catalog\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the bucket to enable\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"disable\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket catalog disable\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Disable the data catalog for an R2 bucket\\",
                      \\"status\\": \\"open-beta\\",
                      \\"owner\\": \\"Product: R2 Data Catalog\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the bucket to disable the data catalog for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"get\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket catalog get\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Get the status of the data catalog for an R2 bucket\\",
                      \\"status\\": \\"open-beta\\",
                      \\"owner\\": \\"Product: R2 Data Catalog\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket whose data catalog status to retrieve\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      }
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            },
            \\"notification\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler r2 bucket notification\\",
                \\"metadata\\": {
                  \\"description\\": \\"Manage event notification rules for an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                }
              },
              \\"subtree\\": {
                \\"get\\": {
                  \\"definition\\": {
                    \\"type\\": \\"alias\\",
                    \\"command\\": \\"wrangler r2 bucket notification get\\",
                    \\"aliasOf\\": \\"wrangler r2 bucket notification list\\"
                  },
                  \\"subtree\\": {}
                },
                \\"list\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket notification list\\",
                    \\"metadata\\": {
                      \\"description\\": \\"List event notification rules for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to get event notification rules for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"create\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket notification create\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Create an event notification rule for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to create an event notification rule for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"event-types\\": {
                        \\"describe\\": \\"The type of event(s) that will emit event notifications\\",
                        \\"alias\\": \\"event-type\\",
                        \\"choices\\": {
                          \\"0\\": \\"object-create\\",
                          \\"1\\": \\"object-delete\\"
                        },
                        \\"demandOption\\": true,
                        \\"requiresArg\\": true,
                        \\"array\\": true
                      },
                      \\"prefix\\": {
                        \\"describe\\": \\"The prefix that an object must match to emit event notifications (note: regular expressions not supported)\\",
                        \\"requiresArg\\": false,
                        \\"type\\": \\"string\\"
                      },
                      \\"suffix\\": {
                        \\"describe\\": \\"The suffix that an object must match to emit event notifications (note: regular expressions not supported)\\",
                        \\"type\\": \\"string\\"
                      },
                      \\"queue\\": {
                        \\"describe\\": \\"The name of the queue that will receive event notification messages\\",
                        \\"demandOption\\": true,
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"description\\": {
                        \\"describe\\": \\"A description that can be used to identify the event notification rule after creation\\",
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"delete\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket notification delete\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Delete an event notification rule from an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to delete an event notification rule for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"queue\\": {
                        \\"describe\\": \\"The name of the queue that corresponds to the event notification rule. If no rule is provided, all event notification rules associated with the bucket and queue will be deleted\\",
                        \\"demandOption\\": true,
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"rule\\": {
                        \\"describe\\": \\"The ID of the event notification rule to delete\\",
                        \\"requiresArg\\": false,
                        \\"type\\": \\"string\\"
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            },
            \\"domain\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler r2 bucket domain\\",
                \\"metadata\\": {
                  \\"description\\": \\"Manage custom domains for an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                }
              },
              \\"subtree\\": {
                \\"list\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket domain list\\",
                    \\"metadata\\": {
                      \\"description\\": \\"List custom domains for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket whose connected custom domains will be listed\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"get\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket domain get\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Get custom domain connected to an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket whose custom domain to retrieve\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"domain\\": {
                        \\"describe\\": \\"The custom domain to get information for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"add\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket domain add\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Connect a custom domain to an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to connect a custom domain to\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"domain\\": {
                        \\"describe\\": \\"The custom domain to connect to the R2 bucket\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"zone-id\\": {
                        \\"describe\\": \\"The zone ID associated with the custom domain\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"min-tls\\": {
                        \\"describe\\": \\"Set the minimum TLS version for the custom domain (defaults to 1.0 if not set)\\",
                        \\"choices\\": {
                          \\"0\\": \\"1.0\\",
                          \\"1\\": \\"1.1\\",
                          \\"2\\": \\"1.2\\",
                          \\"3\\": \\"1.3\\"
                        },
                        \\"type\\": \\"string\\"
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"remove\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket domain remove\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Remove a custom domain from an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to remove the custom domain from\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"domain\\": {
                        \\"describe\\": \\"The custom domain to remove from the R2 bucket\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"update\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket domain update\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Update settings for a custom domain connected to an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket associated with the custom domain to update\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"domain\\": {
                        \\"describe\\": \\"The custom domain whose settings will be updated\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"min-tls\\": {
                        \\"describe\\": \\"Update the minimum TLS version for the custom domain\\",
                        \\"choices\\": {
                          \\"0\\": \\"1.0\\",
                          \\"1\\": \\"1.1\\",
                          \\"2\\": \\"1.2\\",
                          \\"3\\": \\"1.3\\"
                        },
                        \\"type\\": \\"string\\"
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            },
            \\"dev-url\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler r2 bucket dev-url\\",
                \\"metadata\\": {
                  \\"description\\": \\"Manage public access via the r2.dev URL for an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                }
              },
              \\"subtree\\": {
                \\"get\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket dev-url get\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Get the r2.dev URL and status for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket whose r2.dev URL status to retrieve\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"enable\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket dev-url enable\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Enable public access via the r2.dev URL for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to enable public access via its r2.dev URL\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"disable\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket dev-url disable\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Disable public access via the r2.dev URL for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to disable public access via its r2.dev URL\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            },
            \\"lifecycle\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler r2 bucket lifecycle\\",
                \\"metadata\\": {
                  \\"description\\": \\"Manage lifecycle rules for an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                }
              },
              \\"subtree\\": {
                \\"list\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket lifecycle list\\",
                    \\"metadata\\": {
                      \\"description\\": \\"List lifecycle rules for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to list lifecycle rules for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"add\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket lifecycle add\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Add a lifecycle rule to an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\",
                      \\"1\\": \\"name\\",
                      \\"2\\": \\"prefix\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to add a lifecycle rule to\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"name\\": {
                        \\"describe\\": \\"A unique name for the lifecycle rule, used to identify and manage it.\\",
                        \\"alias\\": \\"id\\",
                        \\"type\\": \\"string\\",
                        \\"requiresArg\\": true
                      },
                      \\"prefix\\": {
                        \\"describe\\": \\"Prefix condition for the lifecycle rule (leave empty for all prefixes)\\",
                        \\"type\\": \\"string\\",
                        \\"requiresArg\\": true
                      },
                      \\"expire-days\\": {
                        \\"describe\\": \\"Number of days after which objects expire\\",
                        \\"type\\": \\"number\\",
                        \\"requiresArg\\": true
                      },
                      \\"expire-date\\": {
                        \\"describe\\": \\"Date after which objects expire (YYYY-MM-DD)\\",
                        \\"type\\": \\"string\\",
                        \\"requiresArg\\": true
                      },
                      \\"ia-transition-days\\": {
                        \\"describe\\": \\"Number of days after which objects transition to Infrequent Access storage\\",
                        \\"type\\": \\"number\\",
                        \\"requiresArg\\": true
                      },
                      \\"ia-transition-date\\": {
                        \\"describe\\": \\"Date after which objects transition to Infrequent Access storage (YYYY-MM-DD)\\",
                        \\"type\\": \\"string\\",
                        \\"requiresArg\\": true
                      },
                      \\"abort-multipart-days\\": {
                        \\"describe\\": \\"Number of days after which incomplete multipart uploads are aborted\\",
                        \\"type\\": \\"number\\",
                        \\"requiresArg\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"remove\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket lifecycle remove\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Remove a lifecycle rule from an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to remove a lifecycle rule from\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"name\\": {
                        \\"describe\\": \\"The unique name of the lifecycle rule to remove\\",
                        \\"alias\\": \\"id\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"requiresArg\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"set\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket lifecycle set\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Set the lifecycle configuration for an R2 bucket from a JSON file\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to set lifecycle configuration for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"file\\": {
                        \\"describe\\": \\"Path to the JSON file containing lifecycle configuration\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"requiresArg\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            },
            \\"cors\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler r2 bucket cors\\",
                \\"metadata\\": {
                  \\"description\\": \\"Manage CORS configuration for an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                }
              },
              \\"subtree\\": {
                \\"delete\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket cors delete\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Clear the CORS configuration for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to delete the CORS configuration for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"list\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket cors list\\",
                    \\"metadata\\": {
                      \\"description\\": \\"List the CORS rules for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to list the CORS rules for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"set\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket cors set\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Set the CORS configuration for an R2 bucket from a JSON file\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to set the CORS configuration for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"file\\": {
                        \\"describe\\": \\"Path to the JSON file containing the CORS configuration\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"requiresArg\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            },
            \\"lock\\": {
              \\"definition\\": {
                \\"type\\": \\"namespace\\",
                \\"command\\": \\"wrangler r2 bucket lock\\",
                \\"metadata\\": {
                  \\"description\\": \\"Manage lock rules for an R2 bucket\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: R2\\"
                }
              },
              \\"subtree\\": {
                \\"list\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket lock list\\",
                    \\"metadata\\": {
                      \\"description\\": \\"List lock rules for an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to list lock rules for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"add\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket lock add\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Add a lock rule to an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\",
                      \\"1\\": \\"name\\",
                      \\"2\\": \\"prefix\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to add a bucket lock rule to\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"name\\": {
                        \\"describe\\": \\"A unique name for the bucket lock rule, used to identify and manage it.\\",
                        \\"alias\\": \\"id\\",
                        \\"type\\": \\"string\\",
                        \\"requiresArg\\": true
                      },
                      \\"prefix\\": {
                        \\"describe\\": \\"Prefix condition for the bucket lock rule (set to \\\\\\"\\\\\\" for all prefixes)\\",
                        \\"type\\": \\"string\\",
                        \\"requiresArg\\": true
                      },
                      \\"retention-days\\": {
                        \\"describe\\": \\"Number of days which objects will be retained for\\",
                        \\"type\\": \\"number\\",
                        \\"conflicts\\": {
                          \\"0\\": \\"retention-date\\",
                          \\"1\\": \\"retention-indefinite\\"
                        }
                      },
                      \\"retention-date\\": {
                        \\"describe\\": \\"Date after which objects will be retained until (YYYY-MM-DD)\\",
                        \\"type\\": \\"string\\",
                        \\"conflicts\\": {
                          \\"0\\": \\"retention-days\\",
                          \\"1\\": \\"retention-indefinite\\"
                        }
                      },
                      \\"retention-indefinite\\": {
                        \\"describe\\": \\"Retain objects indefinitely\\",
                        \\"type\\": \\"boolean\\",
                        \\"conflicts\\": {
                          \\"0\\": \\"retention-date\\",
                          \\"1\\": \\"retention-days\\"
                        }
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"remove\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket lock remove\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Remove a bucket lock rule from an R2 bucket\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to remove a bucket lock rule from\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"name\\": {
                        \\"describe\\": \\"The unique name of the bucket lock rule to remove\\",
                        \\"alias\\": \\"id\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"requiresArg\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      }
                    }
                  },
                  \\"subtree\\": {}
                },
                \\"set\\": {
                  \\"definition\\": {
                    \\"type\\": \\"command\\",
                    \\"command\\": \\"wrangler r2 bucket lock set\\",
                    \\"metadata\\": {
                      \\"description\\": \\"Set the lock configuration for an R2 bucket from a JSON file\\",
                      \\"status\\": \\"stable\\",
                      \\"owner\\": \\"Product: R2\\"
                    },
                    \\"positionalArgs\\": {
                      \\"0\\": \\"bucket\\"
                    },
                    \\"args\\": {
                      \\"bucket\\": {
                        \\"describe\\": \\"The name of the R2 bucket to set lock configuration for\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true
                      },
                      \\"file\\": {
                        \\"describe\\": \\"Path to the JSON file containing lock configuration\\",
                        \\"type\\": \\"string\\",
                        \\"demandOption\\": true,
                        \\"requiresArg\\": true
                      },
                      \\"jurisdiction\\": {
                        \\"describe\\": \\"The jurisdiction where the bucket exists\\",
                        \\"alias\\": \\"J\\",
                        \\"requiresArg\\": true,
                        \\"type\\": \\"string\\"
                      },
                      \\"force\\": {
                        \\"describe\\": \\"Skip confirmation\\",
                        \\"type\\": \\"boolean\\",
                        \\"alias\\": \\"y\\",
                        \\"default\\": false
                      }
                    }
                  },
                  \\"subtree\\": {}
                }
              }
            }
          }
        }
      }
    },
    \\"d1\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler d1\\",
        \\"metadata\\": {
          \\"description\\": \\"🗄  Manage Workers D1 databases\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Product: D1\\"
        }
      },
      \\"subtree\\": {
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler d1 list\\",
            \\"metadata\\": {
              \\"description\\": \\"List D1 databases\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: D1\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"json\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Return output as clean JSON\\",
                \\"default\\": false
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"info\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler d1 info\\",
            \\"metadata\\": {
              \\"description\\": \\"Get information about a D1 database, including the current database size and state\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: D1\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the DB\\"
              },
              \\"json\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Return output as clean JSON\\",
                \\"default\\": false
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"insights\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler d1 insights\\",
            \\"metadata\\": {
              \\"description\\": \\"Get information about the queries run on a D1 database.\\",
              \\"status\\": \\"experimental\\",
              \\"owner\\": \\"Product: D1\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the DB\\"
              },
              \\"timePeriod\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Fetch data from now to the provided time period\\",
                \\"default\\": \\"1d\\"
              },
              \\"sort-type\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Choose the operation you want to sort insights by\\",
                \\"choices\\": {
                  \\"0\\": \\"sum\\",
                  \\"1\\": \\"avg\\"
                },
                \\"default\\": \\"sum\\"
              },
              \\"sort-by\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Choose the field you want to sort insights by\\",
                \\"choices\\": {
                  \\"0\\": \\"time\\",
                  \\"1\\": \\"reads\\",
                  \\"2\\": \\"writes\\",
                  \\"3\\": \\"count\\"
                },
                \\"default\\": \\"time\\"
              },
              \\"sort-direction\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Choose a sort direction\\",
                \\"choices\\": {
                  \\"0\\": \\"ASC\\",
                  \\"1\\": \\"DESC\\"
                },
                \\"default\\": \\"DESC\\"
              },
              \\"limit\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"fetch insights about the first X queries\\",
                \\"default\\": 5
              },
              \\"count\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"Same as --limit\\",
                \\"default\\": 5,
                \\"deprecated\\": true,
                \\"hidden\\": true
              },
              \\"json\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"return output as clean JSON\\",
                \\"default\\": false
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"create\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler d1 create\\",
            \\"metadata\\": {
              \\"description\\": \\"Create D1 database\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: D1\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the new DB\\"
              },
              \\"location\\": {
                \\"type\\": \\"string\\",
                \\"choices\\": {
                  \\"0\\": \\"weur\\",
                  \\"1\\": \\"eeur\\",
                  \\"2\\": \\"apac\\",
                  \\"3\\": \\"oc\\",
                  \\"4\\": \\"wnam\\",
                  \\"5\\": \\"enam\\"
                },
                \\"description\\": \\"A hint for the primary location of the new DB. Options:\\\\n\\\\tweur: Western Europe\\\\n\\\\teeur: Eastern Europe\\\\n\\\\tapac: Asia Pacific\\\\n\\\\toc: Oceania\\\\n\\\\twnam: Western North America\\\\n\\\\tenam: Eastern North America\\\\n\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler d1 delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete D1 database\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: D1\\"
            },
            \\"behaviour\\": {
              \\"printBanner\\": true
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name or binding of the DB\\"
              },
              \\"skip-confirmation\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Skip confirmation\\",
                \\"alias\\": \\"y\\",
                \\"default\\": false
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"execute\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler d1 execute\\",
            \\"metadata\\": {
              \\"description\\": \\"Execute a command or SQL file\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: D1\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"database\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name or binding of the DB\\"
              },
              \\"yes\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Answer \\\\\\"yes\\\\\\" to any prompts\\",
                \\"alias\\": \\"y\\"
              },
              \\"local\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Execute commands/files against a local DB for use with wrangler dev\\"
              },
              \\"remote\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Execute commands/files against a remote DB for use with wrangler dev\\"
              },
              \\"file\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"A .sql file to ingest\\"
              },
              \\"command\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"A single SQL statement to execute\\"
              },
              \\"persist-to\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Specify directory to use for local persistence (for --local)\\",
                \\"requiresArg\\": true
              },
              \\"json\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Return output as clean JSON\\",
                \\"default\\": false
              },
              \\"preview\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Execute commands/files against a preview D1 DB\\",
                \\"default\\": false
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"database\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"export\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler d1 export\\",
            \\"metadata\\": {
              \\"description\\": \\"Export the contents or schema of your database as a .sql file\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: D1\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the DB\\"
              },
              \\"local\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Export from your local DB you use with wrangler dev\\",
                \\"conflicts\\": \\"remote\\"
              },
              \\"remote\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Export from your live D1\\",
                \\"conflicts\\": \\"local\\"
              },
              \\"no-schema\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Only output table contents, not the DB schema\\",
                \\"conflicts\\": \\"no-data\\"
              },
              \\"no-data\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Only output table schema, not the contents of the DBs themselves\\",
                \\"conflicts\\": \\"no-schema\\"
              },
              \\"schema\\": {
                \\"type\\": \\"boolean\\",
                \\"hidden\\": true,
                \\"default\\": true
              },
              \\"data\\": {
                \\"type\\": \\"boolean\\",
                \\"hidden\\": true,
                \\"default\\": true
              },
              \\"table\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Specify which tables to include in export\\"
              },
              \\"output\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Which .sql file to output to\\",
                \\"demandOption\\": true
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"time-travel\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler d1 time-travel\\",
            \\"metadata\\": {
              \\"description\\": \\"Use Time Travel to restore, fork or copy a database at a specific point-in-time\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: D1\\"
            }
          },
          \\"subtree\\": {
            \\"info\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler d1 time-travel info\\",
                \\"metadata\\": {
                  \\"description\\": \\"Retrieve information about a database at a specific point-in-time using Time Travel\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: D1\\"
                },
                \\"behaviour\\": {},
                \\"args\\": {
                  \\"database\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The name or binding of the DB\\"
                  },
                  \\"timestamp\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Accepts a Unix (seconds from epoch) or RFC3339 timestamp (e.g. 2023-07-13T08:46:42.228Z) to retrieve a bookmark for\\"
                  },
                  \\"json\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Return output as clean JSON\\",
                    \\"default\\": false
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"database\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"restore\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler d1 time-travel restore\\",
                \\"metadata\\": {
                  \\"description\\": \\"Restore a database back to a specific point-in-time\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: D1\\"
                },
                \\"behaviour\\": {},
                \\"args\\": {
                  \\"database\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The name or binding of the DB\\"
                  },
                  \\"bookmark\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Bookmark to use for time travel\\"
                  },
                  \\"timestamp\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Accepts a Unix (seconds from epoch) or RFC3339 timestamp (e.g. 2023-07-13T08:46:42.228Z) to retrieve a bookmark for\\"
                  },
                  \\"json\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Return output as clean JSON\\",
                    \\"default\\": false
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"database\\"
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"migrations\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler d1 migrations\\",
            \\"metadata\\": {
              \\"description\\": \\"Interact with D1 migrations\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: D1\\"
            }
          },
          \\"subtree\\": {
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler d1 migrations list\\",
                \\"metadata\\": {
                  \\"description\\": \\"List your D1 migrations\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: D1\\"
                },
                \\"args\\": {
                  \\"database\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The name or binding of the DB\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute commands/files against a local DB for use with wrangler dev\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute commands/files against a remote DB for use with wrangler dev --remote\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute commands/files against a preview D1 DB\\",
                    \\"default\\": false
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Specify directory to use for local persistence (you must use --local with this flag)\\",
                    \\"requiresArg\\": true
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"database\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"create\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler d1 migrations create\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create a new migration\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: D1\\"
                },
                \\"behaviour\\": {
                  \\"printBanner\\": true
                },
                \\"args\\": {
                  \\"database\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The name or binding of the DB\\"
                  },
                  \\"message\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The Migration message\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"database\\",
                  \\"1\\": \\"message\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"apply\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler d1 migrations apply\\",
                \\"metadata\\": {
                  \\"description\\": \\"Apply D1 migrations\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: D1\\"
                },
                \\"args\\": {
                  \\"database\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The name or binding of the DB\\"
                  },
                  \\"local\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute commands/files against a local DB for use with wrangler dev\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute commands/files against a remote DB for use with wrangler dev --remote\\"
                  },
                  \\"preview\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute commands/files against a preview D1 DB\\",
                    \\"default\\": false
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Specify directory to use for local persistence (you must use --local with this flag)\\",
                    \\"requiresArg\\": true
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"database\\"
                }
              },
              \\"subtree\\": {}
            }
          }
        }
      }
    },
    \\"vectorize\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler vectorize\\",
        \\"metadata\\": {
          \\"description\\": \\"🧮 Manage Vectorize indexes\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Product: Vectorize\\"
        }
      },
      \\"subtree\\": {
        \\"create\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize create\\",
            \\"metadata\\": {
              \\"description\\": \\"Create a Vectorize index\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Vectorize\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index to create (must be unique).\\"
              },
              \\"dimensions\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"The dimension size to configure this index for, based on the output dimensions of your ML model.\\"
              },
              \\"metric\\": {
                \\"type\\": \\"string\\",
                \\"choices\\": {
                  \\"0\\": \\"euclidean\\",
                  \\"1\\": \\"cosine\\",
                  \\"2\\": \\"dot-product\\"
                },
                \\"description\\": \\"The distance metric to use for searching within the index.\\"
              },
              \\"preset\\": {
                \\"type\\": \\"string\\",
                \\"choices\\": {
                  \\"0\\": \\"@cf/baai/bge-small-en-v1.5\\",
                  \\"1\\": \\"@cf/baai/bge-base-en-v1.5\\",
                  \\"2\\": \\"@cf/baai/bge-large-en-v1.5\\",
                  \\"3\\": \\"openai/text-embedding-ada-002\\",
                  \\"4\\": \\"cohere/embed-multilingual-v2.0\\"
                },
                \\"description\\": \\"The name of an preset representing an embeddings model: Vectorize will configure the dimensions and distance metric for you when provided.\\"
              },
              \\"description\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"An optional description for this index.\\"
              },
              \\"json\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"description\\": \\"Return output as clean JSON\\"
              },
              \\"deprecated-v1\\": {
                \\"type\\": \\"boolean\\",
                \\"deprecated\\": true,
                \\"default\\": false,
                \\"description\\": \\"Create a deprecated Vectorize V1 index. This is not recommended and indexes created with this option need all other Vectorize operations to have this option enabled.\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete a Vectorize index\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Vectorize\\"
            },
            \\"behaviour\\": {
              \\"printBanner\\": true,
              \\"provideConfig\\": true
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index\\"
              },
              \\"force\\": {
                \\"type\\": \\"boolean\\",
                \\"alias\\": \\"y\\",
                \\"default\\": false,
                \\"description\\": \\"Skip confirmation\\"
              },
              \\"deprecated-v1\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"description\\": \\"Delete a deprecated Vectorize V1 index.\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"get\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize get\\",
            \\"metadata\\": {
              \\"description\\": \\"Get a Vectorize index by name\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Vectorize\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index.\\"
              },
              \\"json\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"description\\": \\"Return output as clean JSON\\"
              },
              \\"deprecated-v1\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"description\\": \\"Fetch a deprecated V1 Vectorize index. This must be enabled if the index was created with V1 option.\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize list\\",
            \\"metadata\\": {
              \\"description\\": \\"List your Vectorize indexes\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Vectorize\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"json\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"description\\": \\"Return output as clean JSON\\"
              },
              \\"deprecated-v1\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"description\\": \\"List deprecated Vectorize V1 indexes for your account.\\"
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"query\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize query\\",
            \\"metadata\\": {
              \\"description\\": \\"Query a Vectorize index\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Vectorize\\",
              \\"examples\\": {
                \\"0\\": {
                  \\"command\\": \\"wrangler vectorize query --vector 1 2 3 0.5 1.25 6\\",
                  \\"description\\": \\"Query the Vectorize Index by vector\\"
                },
                \\"1\\": {
                  \\"command\\": \\"wrangler vectorize query --vector $(jq -r '.[]' data.json | xargs)\\",
                  \\"description\\": \\"Query the Vectorize Index by vector from a json file that contains data in the format [1, 2, 3].\\"
                },
                \\"2\\": {
                  \\"command\\": \\"wrangler vectorize query --filter '{ 'p1': 'abc', 'p2': { '$ne': true }, 'p3': 10, 'p4': false, 'nested.p5': 'abcd' }'\\",
                  \\"description\\": \\"Filter the query results.\\"
                }
              }
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index\\"
              },
              \\"vector\\": {
                \\"type\\": \\"number\\",
                \\"array\\": true,
                \\"description\\": \\"Vector to query the Vectorize Index\\"
              },
              \\"vector-id\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Identifier for a vector in the index against which the index should be queried\\"
              },
              \\"top-k\\": {
                \\"type\\": \\"number\\",
                \\"default\\": 5,
                \\"description\\": \\"The number of results (nearest neighbors) to return\\"
              },
              \\"return-values\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"description\\": \\"Specify if the vector values should be included in the results\\"
              },
              \\"return-metadata\\": {
                \\"type\\": \\"string\\",
                \\"choices\\": {
                  \\"0\\": \\"all\\",
                  \\"1\\": \\"indexed\\",
                  \\"2\\": \\"none\\"
                },
                \\"default\\": \\"none\\",
                \\"description\\": \\"Specify if the vector metadata should be included in the results\\"
              },
              \\"namespace\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Filter the query results based on this namespace\\"
              },
              \\"filter\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Filter the query results based on this metadata filter.\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"insert\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize insert\\",
            \\"metadata\\": {
              \\"description\\": \\"Insert vectors into a Vectorize index\\",
              \\"owner\\": \\"Product: Vectorize\\",
              \\"status\\": \\"stable\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index.\\"
              },
              \\"file\\": {
                \\"describe\\": \\"A file containing line separated json (ndjson) vector objects.\\",
                \\"demandOption\\": true,
                \\"type\\": \\"string\\"
              },
              \\"batch-size\\": {
                \\"describe\\": \\"Number of vector records to include when sending to the Cloudflare API.\\",
                \\"type\\": \\"number\\",
                \\"default\\": 1000
              },
              \\"json\\": {
                \\"describe\\": \\"return output as clean JSON\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              },
              \\"deprecated-v1\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"describe\\": \\"Insert into a deprecated V1 Vectorize index. This must be enabled if the index was created with the V1 option.\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"upsert\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize upsert\\",
            \\"metadata\\": {
              \\"description\\": \\"Upsert vectors into a Vectorize index\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Vectorize\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index.\\"
              },
              \\"file\\": {
                \\"describe\\": \\"A file containing line separated json (ndjson) vector objects.\\",
                \\"demandOption\\": true,
                \\"type\\": \\"string\\"
              },
              \\"batch-size\\": {
                \\"describe\\": \\"Number of vector records to include in a single upsert batch when sending to the Cloudflare API.\\",
                \\"type\\": \\"number\\",
                \\"default\\": 5000
              },
              \\"json\\": {
                \\"describe\\": \\"return output as clean JSON\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"get-vectors\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize get-vectors\\",
            \\"metadata\\": {
              \\"description\\": \\"Get vectors from a Vectorize index\\",
              \\"owner\\": \\"Product: Vectorize\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index.\\"
              },
              \\"ids\\": {
                \\"type\\": \\"string\\",
                \\"array\\": true,
                \\"demandOption\\": true,
                \\"describe\\": \\"Vector identifiers to be fetched from the Vectorize Index. Example: \`--ids a 'b' 1 '2'\`\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete-vectors\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize delete-vectors\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete vectors in a Vectorize index\\",
              \\"owner\\": \\"Product: Vectorize\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index.\\"
              },
              \\"ids\\": {
                \\"type\\": \\"string\\",
                \\"array\\": true,
                \\"demandOption\\": true,
                \\"describe\\": \\"Vector identifiers to be deleted from the Vectorize Index.  Example: \`--ids a 'b' 1 '2'\`\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"info\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize info\\",
            \\"metadata\\": {
              \\"description\\": \\"Get additional details about the index\\",
              \\"owner\\": \\"Product: Vectorize\\",
              \\"status\\": \\"stable\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index.\\"
              },
              \\"json\\": {
                \\"describe\\": \\"return output as clean JSON\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"create-metadata-index\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize create-metadata-index\\",
            \\"metadata\\": {
              \\"description\\": \\"Enable metadata filtering on the specified property\\",
              \\"owner\\": \\"Product: Vectorize\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index.\\"
              },
              \\"propertyName\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the metadata property to index.\\"
              },
              \\"type\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"choices\\": {
                  \\"0\\": \\"string\\",
                  \\"1\\": \\"number\\",
                  \\"2\\": \\"boolean\\"
                },
                \\"description\\": \\"The type of metadata property to index. Valid types are 'string', 'number' and 'boolean'.\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"list-metadata-index\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize list-metadata-index\\",
            \\"metadata\\": {
              \\"description\\": \\"List metadata properties on which metadata filtering is enabled\\",
              \\"owner\\": \\"Product: Vectorize\\",
              \\"status\\": \\"stable\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index.\\"
              },
              \\"json\\": {
                \\"describe\\": \\"return output as clean JSON\\",
                \\"type\\": \\"boolean\\",
                \\"default\\": false
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete-metadata-index\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler vectorize delete-metadata-index\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete metadata indexes\\",
              \\"owner\\": \\"Product: Vectorize\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Vectorize index.\\"
              },
              \\"propertyName\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the metadata property to index.\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"hyperdrive\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler hyperdrive\\",
        \\"metadata\\": {
          \\"description\\": \\"🚀 Manage Hyperdrive databases\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Product: Hyperdrive\\"
        }
      },
      \\"subtree\\": {
        \\"create\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler hyperdrive create\\",
            \\"metadata\\": {
              \\"description\\": \\"Create a Hyperdrive config\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Hyperdrive\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The name of the Hyperdrive config\\"
              },
              \\"connection-string\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The connection string for the database you want Hyperdrive to connect to - ex: protocol://user:password@host:port/database\\",
                \\"group\\": \\"Configure using a connection string\\"
              },
              \\"origin-host\\": {
                \\"alias\\": \\"host\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"The host of the origin database\\",
                \\"conflicts\\": \\"connection-string\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"origin-port\\": {
                \\"alias\\": \\"port\\",
                \\"type\\": \\"number\\",
                \\"description\\": \\"The port number of the origin database\\",
                \\"conflicts\\": {
                  \\"0\\": \\"connection-string\\",
                  \\"1\\": \\"access-client-id\\",
                  \\"2\\": \\"access-client-secret\\"
                },
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"origin-scheme\\": {
                \\"alias\\": \\"scheme\\",
                \\"type\\": \\"string\\",
                \\"choices\\": {
                  \\"0\\": \\"postgres\\",
                  \\"1\\": \\"postgresql\\",
                  \\"2\\": \\"mysql\\"
                },
                \\"description\\": \\"The scheme used to connect to the origin database\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\",
                \\"default\\": \\"postgresql\\"
              },
              \\"database\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The name of the database within the origin database\\",
                \\"conflicts\\": \\"connection-string\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"origin-user\\": {
                \\"alias\\": \\"user\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"The username used to connect to the origin database\\",
                \\"conflicts\\": \\"connection-string\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"origin-password\\": {
                \\"alias\\": \\"password\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"The password used to connect to the origin database\\",
                \\"conflicts\\": \\"connection-string\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"access-client-id\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The Client ID of the Access token to use when connecting to the origin database\\",
                \\"conflicts\\": {
                  \\"0\\": \\"connection-string\\",
                  \\"1\\": \\"origin-port\\"
                },
                \\"implies\\": {
                  \\"0\\": \\"access-client-secret\\"
                },
                \\"group\\": \\"Hyperdrive over Access [conflicts with --connection-string, --origin-port]\\"
              },
              \\"access-client-secret\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The Client Secret of the Access token to use when connecting to the origin database\\",
                \\"conflicts\\": {
                  \\"0\\": \\"connection-string\\",
                  \\"1\\": \\"origin-port\\"
                },
                \\"group\\": \\"Hyperdrive over Access [conflicts with --connection-string, --origin-port]\\"
              },
              \\"caching-disabled\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Disables the caching of SQL responses\\",
                \\"group\\": \\"Caching Options\\"
              },
              \\"max-age\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"Specifies max duration for which items should persist in the cache, cannot be set when caching is disabled\\",
                \\"group\\": \\"Caching Options\\"
              },
              \\"swr\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"Indicates the number of seconds cache may serve the response after it becomes stale, cannot be set when caching is disabled\\",
                \\"group\\": \\"Caching Options\\"
              },
              \\"ca-certificate-id\\": {
                \\"alias\\": \\"ca-certificate-uuid\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"Sets custom CA certificate when connecting to origin database. Must be valid UUID of already uploaded CA certificate.\\"
              },
              \\"mtls-certificate-id\\": {
                \\"alias\\": \\"mtls-certificate-uuid\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"Sets custom mTLS client certificates when connecting to origin database. Must be valid UUID of already uploaded public/private key certificates.\\"
              },
              \\"sslmode\\": {
                \\"type\\": \\"string\\",
                \\"choices\\": {
                  \\"0\\": \\"require\\",
                  \\"1\\": \\"verify-ca\\",
                  \\"2\\": \\"verify-full\\"
                },
                \\"description\\": \\"Sets CA sslmode for connecting to database.\\"
              },
              \\"origin-connection-limit\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"The (soft) maximum number of connections that Hyperdrive may establish to the origin database\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler hyperdrive delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete a Hyperdrive config\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Hyperdrive\\"
            },
            \\"args\\": {
              \\"id\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The ID of the Hyperdrive config\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"id\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"get\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler hyperdrive get\\",
            \\"metadata\\": {
              \\"description\\": \\"Get a Hyperdrive config\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Hyperdrive\\"
            },
            \\"args\\": {
              \\"id\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The ID of the Hyperdrive config\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"id\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler hyperdrive list\\",
            \\"metadata\\": {
              \\"description\\": \\"List Hyperdrive configs\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Hyperdrive\\"
            },
            \\"args\\": {}
          },
          \\"subtree\\": {}
        },
        \\"update\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler hyperdrive update\\",
            \\"metadata\\": {
              \\"description\\": \\"Update a Hyperdrive config\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: Hyperdrive\\"
            },
            \\"args\\": {
              \\"id\\": {
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"description\\": \\"The ID of the Hyperdrive config\\"
              },
              \\"name\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Give your config a new name\\"
              },
              \\"connection-string\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The connection string for the database you want Hyperdrive to connect to - ex: protocol://user:password@host:port/database\\",
                \\"group\\": \\"Configure using a connection string\\"
              },
              \\"origin-host\\": {
                \\"alias\\": \\"host\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"The host of the origin database\\",
                \\"conflicts\\": \\"connection-string\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"origin-port\\": {
                \\"alias\\": \\"port\\",
                \\"type\\": \\"number\\",
                \\"description\\": \\"The port number of the origin database\\",
                \\"conflicts\\": {
                  \\"0\\": \\"connection-string\\",
                  \\"1\\": \\"access-client-id\\",
                  \\"2\\": \\"access-client-secret\\"
                },
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"origin-scheme\\": {
                \\"alias\\": \\"scheme\\",
                \\"type\\": \\"string\\",
                \\"choices\\": {
                  \\"0\\": \\"postgres\\",
                  \\"1\\": \\"postgresql\\",
                  \\"2\\": \\"mysql\\"
                },
                \\"description\\": \\"The scheme used to connect to the origin database\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"database\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The name of the database within the origin database\\",
                \\"conflicts\\": \\"connection-string\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"origin-user\\": {
                \\"alias\\": \\"user\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"The username used to connect to the origin database\\",
                \\"conflicts\\": \\"connection-string\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"origin-password\\": {
                \\"alias\\": \\"password\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"The password used to connect to the origin database\\",
                \\"conflicts\\": \\"connection-string\\",
                \\"group\\": \\"Configure using individual parameters [conflicts with --connection-string]\\"
              },
              \\"access-client-id\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The Client ID of the Access token to use when connecting to the origin database\\",
                \\"conflicts\\": {
                  \\"0\\": \\"connection-string\\",
                  \\"1\\": \\"origin-port\\"
                },
                \\"implies\\": {
                  \\"0\\": \\"access-client-secret\\"
                },
                \\"group\\": \\"Hyperdrive over Access [conflicts with --connection-string, --origin-port]\\"
              },
              \\"access-client-secret\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The Client Secret of the Access token to use when connecting to the origin database\\",
                \\"conflicts\\": {
                  \\"0\\": \\"connection-string\\",
                  \\"1\\": \\"origin-port\\"
                },
                \\"group\\": \\"Hyperdrive over Access [conflicts with --connection-string, --origin-port]\\"
              },
              \\"caching-disabled\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Disables the caching of SQL responses\\",
                \\"group\\": \\"Caching Options\\"
              },
              \\"max-age\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"Specifies max duration for which items should persist in the cache, cannot be set when caching is disabled\\",
                \\"group\\": \\"Caching Options\\"
              },
              \\"swr\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"Indicates the number of seconds cache may serve the response after it becomes stale, cannot be set when caching is disabled\\",
                \\"group\\": \\"Caching Options\\"
              },
              \\"ca-certificate-id\\": {
                \\"alias\\": \\"ca-certificate-uuid\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"Sets custom CA certificate when connecting to origin database. Must be valid UUID of already uploaded CA certificate.\\"
              },
              \\"mtls-certificate-id\\": {
                \\"alias\\": \\"mtls-certificate-uuid\\",
                \\"type\\": \\"string\\",
                \\"description\\": \\"Sets custom mTLS client certificates when connecting to origin database. Must be valid UUID of already uploaded public/private key certificates.\\"
              },
              \\"sslmode\\": {
                \\"type\\": \\"string\\",
                \\"choices\\": {
                  \\"0\\": \\"require\\",
                  \\"1\\": \\"verify-ca\\",
                  \\"2\\": \\"verify-full\\"
                },
                \\"description\\": \\"Sets CA sslmode for connecting to database.\\"
              },
              \\"origin-connection-limit\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"The (soft) maximum number of connections that Hyperdrive may establish to the origin database\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"id\\"
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"cert\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler cert\\",
        \\"metadata\\": {
          \\"description\\": \\"🪪 Manage client mTLS certificates and CA certificate chains used for secured connections\\",
          \\"status\\": \\"open-beta\\",
          \\"owner\\": \\"Product: SSL\\"
        }
      },
      \\"subtree\\": {
        \\"upload\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler cert upload\\",
            \\"metadata\\": {
              \\"description\\": \\"Upload a new cert\\",
              \\"status\\": \\"open-beta\\",
              \\"owner\\": \\"Product: SSL\\"
            }
          },
          \\"subtree\\": {
            \\"mtls-certificate\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler cert upload mtls-certificate\\",
                \\"metadata\\": {
                  \\"description\\": \\"Upload an mTLS certificate\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"args\\": {
                  \\"cert\\": {
                    \\"description\\": \\"The path to a certificate file (.pem) containing a chain of certificates to upload\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"key\\": {
                    \\"description\\": \\"The path to a file containing the private key for your leaf certificate\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"name\\": {
                    \\"description\\": \\"The name for the certificate\\",
                    \\"type\\": \\"string\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"certificate-authority\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler cert upload certificate-authority\\",
                \\"metadata\\": {
                  \\"description\\": \\"Upload a CA certificate chain\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"describe\\": \\"The name for the certificate\\",
                    \\"type\\": \\"string\\"
                  },
                  \\"ca-cert\\": {
                    \\"description\\": \\"The path to a certificate file (.pem) containing a chain of CA certificates to upload\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler cert list\\",
            \\"metadata\\": {
              \\"description\\": \\"List uploaded mTLS certificates\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: SSL\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler cert delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete an mTLS certificate\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: SSL\\"
            },
            \\"args\\": {
              \\"id\\": {
                \\"description\\": \\"The id of the mTLS certificate to delete\\",
                \\"type\\": \\"string\\"
              },
              \\"name\\": {
                \\"description\\": \\"The name of the mTLS certificate record to delete\\",
                \\"type\\": \\"string\\"
              }
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"pages\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler pages\\",
        \\"metadata\\": {
          \\"description\\": \\"⚡️ Configure Cloudflare Pages\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"hideGlobalFlags\\": {
            \\"0\\": \\"config\\",
            \\"1\\": \\"env\\"
          }
        }
      },
      \\"subtree\\": {
        \\"dev\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler pages dev\\",
            \\"metadata\\": {
              \\"description\\": \\"Develop your full-stack Pages application locally\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"hideGlobalFlags\\": {
                \\"0\\": \\"config\\",
                \\"1\\": \\"env\\"
              }
            },
            \\"behaviour\\": {
              \\"provideConfig\\": false
            },
            \\"args\\": {
              \\"directory\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The directory of static assets to serve\\"
              },
              \\"command\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The proxy command to run  [deprecated]\\"
              },
              \\"local\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": true,
                \\"description\\": \\"Run on my machine\\",
                \\"deprecated\\": true,
                \\"hidden\\": true
              },
              \\"compatibility-date\\": {
                \\"description\\": \\"Date to use for compatibility checks\\",
                \\"type\\": \\"string\\"
              },
              \\"compatibility-flags\\": {
                \\"description\\": \\"Flags to use for compatibility checks\\",
                \\"alias\\": \\"compatibility-flag\\",
                \\"type\\": \\"string\\",
                \\"array\\": true
              },
              \\"ip\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The IP address to listen on\\"
              },
              \\"port\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"The port to listen on (serve from)\\"
              },
              \\"inspector-port\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"Port for devtools to connect to\\"
              },
              \\"proxy\\": {
                \\"type\\": \\"number\\",
                \\"description\\": \\"The port to proxy (where the static assets are served)\\",
                \\"deprecated\\": true
              },
              \\"script-path\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The location of the single Worker script if not using functions  [default: _worker.js]\\",
                \\"deprecated\\": true
              },
              \\"bundle\\": {
                \\"type\\": \\"boolean\\",
                \\"hidden\\": true
              },
              \\"no-bundle\\": {
                \\"type\\": \\"boolean\\",
                \\"conflicts\\": \\"bundle\\",
                \\"description\\": \\"Whether to run bundling on \`_worker.js\`\\"
              },
              \\"binding\\": {
                \\"type\\": \\"array\\",
                \\"description\\": \\"Bind variable/secret (KEY=VALUE)\\",
                \\"alias\\": \\"b\\"
              },
              \\"kv\\": {
                \\"type\\": \\"array\\",
                \\"description\\": \\"KV namespace to bind (--kv KV_BINDING)\\",
                \\"alias\\": \\"k\\"
              },
              \\"d1\\": {
                \\"type\\": \\"array\\",
                \\"description\\": \\"D1 database to bind (--d1 D1_BINDING)\\"
              },
              \\"do\\": {
                \\"type\\": \\"array\\",
                \\"description\\": \\"Durable Object to bind (--do DO_BINDING=CLASS_NAME@SCRIPT_NAME)\\",
                \\"alias\\": \\"o\\"
              },
              \\"r2\\": {
                \\"type\\": \\"array\\",
                \\"description\\": \\"R2 bucket to bind (--r2 R2_BINDING)\\"
              },
              \\"ai\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"AI to bind (--ai AI_BINDING)\\"
              },
              \\"version-metadata\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"Worker Version metadata (--version-metadata VERSION_METADATA_BINDING)\\"
              },
              \\"service\\": {
                \\"type\\": \\"array\\",
                \\"description\\": \\"Service to bind (--service SERVICE=SCRIPT_NAME)\\",
                \\"alia\\": \\"s\\"
              },
              \\"live-reload\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"description\\": \\"Auto reload HTML pages when change is detected\\"
              },
              \\"local-protocol\\": {
                \\"description\\": \\"Protocol to listen to requests on, defaults to http.\\",
                \\"choices\\": {
                  \\"0\\": \\"http\\",
                  \\"1\\": \\"https\\"
                }
              },
              \\"https-key-path\\": {
                \\"description\\": \\"Path to a custom certificate key\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"https-cert-path\\": {
                \\"description\\": \\"Path to a custom certificate\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"persist-to\\": {
                \\"description\\": \\"Specify directory to use for local persistence (defaults to .wrangler/state)\\",
                \\"type\\": \\"string\\",
                \\"requiresArg\\": true
              },
              \\"node-compat\\": {
                \\"description\\": \\"Enable Node.js compatibility\\",
                \\"default\\": false,
                \\"type\\": \\"boolean\\",
                \\"hidden\\": true,
                \\"deprecated\\": true
              },
              \\"experimental-local\\": {
                \\"description\\": \\"Run on my machine using the Cloudflare Workers runtime\\",
                \\"type\\": \\"boolean\\",
                \\"deprecated\\": true,
                \\"hidden\\": true
              },
              \\"log-level\\": {
                \\"choices\\": {
                  \\"0\\": \\"debug\\",
                  \\"1\\": \\"info\\",
                  \\"2\\": \\"log\\",
                  \\"3\\": \\"warn\\",
                  \\"4\\": \\"error\\",
                  \\"5\\": \\"none\\"
                },
                \\"description\\": \\"Specify logging level\\"
              },
              \\"show-interactive-dev-session\\": {
                \\"description\\": \\"Show interactive dev session (defaults to true if the terminal supports interactivity)\\",
                \\"type\\": \\"boolean\\"
              },
              \\"experimental-vectorize-bind-to-prod\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Bind to production Vectorize indexes in local development mode\\",
                \\"default\\": false
              },
              \\"experimental-images-local-mode\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Use a local lower-fidelity implementation of the Images binding\\",
                \\"default\\": false
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"directory\\",
              \\"1\\": \\"command\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"functions\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler pages functions\\",
            \\"metadata\\": {
              \\"description\\": \\"Helpers related to Pages Functions\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"hideGlobalFlags\\": {
                \\"0\\": \\"config\\",
                \\"1\\": \\"env\\"
              }
            }
          },
          \\"subtree\\": {
            \\"build\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages functions build\\",
                \\"metadata\\": {
                  \\"description\\": \\"Compile a folder of Pages Functions into a single Worker\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"directory\\": {
                    \\"type\\": \\"string\\",
                    \\"default\\": \\"functions\\",
                    \\"description\\": \\"The directory of Pages Functions\\"
                  },
                  \\"outfile\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The location of the output Worker script\\",
                    \\"deprecated\\": true
                  },
                  \\"outdir\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Output directory for the bundled Worker\\"
                  },
                  \\"output-config-path\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The location for the output config file\\"
                  },
                  \\"build-metadata-path\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The location for the build metadata file\\"
                  },
                  \\"project-directory\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The location of the Pages project\\"
                  },
                  \\"output-routes-path\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The location for the output _routes.json file\\"
                  },
                  \\"minify\\": {
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false,
                    \\"description\\": \\"Minify the output Worker script\\"
                  },
                  \\"sourcemap\\": {
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false,
                    \\"description\\": \\"Generate a sourcemap for the output Worker script\\"
                  },
                  \\"fallback-service\\": {
                    \\"type\\": \\"string\\",
                    \\"default\\": \\"ASSETS\\",
                    \\"description\\": \\"The service to fallback to at the end of the \`next\` chain. Setting to '' will fallback to the global \`fetch\`.\\"
                  },
                  \\"watch\\": {
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false,
                    \\"description\\": \\"Watch for changes to the functions and automatically rebuild the Worker script\\"
                  },
                  \\"plugin\\": {
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false,
                    \\"description\\": \\"Build a plugin rather than a Worker script\\"
                  },
                  \\"build-output-directory\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The directory to output static assets to\\"
                  },
                  \\"node-compat\\": {
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false,
                    \\"description\\": \\"Enable Node.js compatibility\\",
                    \\"hidden\\": true,
                    \\"deprecated\\": true
                  },
                  \\"compatibility-date\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Date to use for compatibility checks\\"
                  },
                  \\"compatibility-flags\\": {
                    \\"description\\": \\"Flags to use for compatibility checks\\",
                    \\"alias\\": \\"compatibility-flag\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"array\\": true
                  },
                  \\"bindings\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Bindings used in Functions (used to register beta product shims)\\",
                    \\"deprecated\\": true,
                    \\"hidden\\": true
                  },
                  \\"external\\": {
                    \\"description\\": \\"A list of module imports to exclude from bundling\\",
                    \\"type\\": \\"string\\",
                    \\"array\\": true
                  },
                  \\"metafile\\": {
                    \\"describe\\": \\"Path to output build metadata from esbuild. If flag is used without a path, defaults to 'bundle-meta.json' inside the directory specified by --outdir.\\",
                    \\"type\\": \\"string\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"directory\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"build-env\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages functions build-env\\",
                \\"metadata\\": {
                  \\"description\\": \\"Render a list of environment variables from the config file\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hidden\\": true
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"projectDir\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The location of the Pages project\\"
                  },
                  \\"outfile\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The location to write the build environment file\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"projectDir\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"optimize-routes\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages functions optimize-routes\\",
                \\"metadata\\": {
                  \\"description\\": \\"Consolidate and optimize route paths declared in _routes.json\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hidden\\": true
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"routesPath\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The location of the _routes.json file\\"
                  },
                  \\"outputRoutesPath\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The location of the optimized output routes file\\"
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"project\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler pages project\\",
            \\"metadata\\": {
              \\"description\\": \\"Interact with your Pages projects\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"hideGlobalFlags\\": {
                \\"0\\": \\"config\\",
                \\"1\\": \\"env\\"
              }
            }
          },
          \\"subtree\\": {
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages project list\\",
                \\"metadata\\": {
                  \\"description\\": \\"List your Cloudflare Pages projects\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                }
              },
              \\"subtree\\": {}
            },
            \\"create\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages project create\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create a new Cloudflare Pages project\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"project-name\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The name of your Pages project\\"
                  },
                  \\"production-branch\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The name of the production branch of your project\\"
                  },
                  \\"compatibility-flags\\": {
                    \\"description\\": \\"Flags to use for compatibility checks\\",
                    \\"alias\\": \\"compatibility-flag\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"array\\": true
                  },
                  \\"compatibility-date\\": {
                    \\"description\\": \\"Date to use for compatibility checks\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"project-name\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages project delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Delete a Cloudflare Pages project\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"project-name\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The name of your Pages project\\",
                    \\"demandOption\\": true
                  },
                  \\"yes\\": {
                    \\"alias\\": \\"y\\",
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Answer \\\\\\"yes\\\\\\" to confirm project deletion\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"project-name\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"upload\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages project upload\\",
                \\"metadata\\": {
                  \\"description\\": \\"Upload files to a project\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hidden\\": true
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"directory\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The directory of static files to upload\\"
                  },
                  \\"output-manifest-path\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The name of the project you want to deploy to\\"
                  },
                  \\"skip-caching\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Skip asset caching which speeds up builds\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"directory\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"validate\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages project validate\\",
                \\"metadata\\": {
                  \\"description\\": \\"Validate a Pages project\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hidden\\": true
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"directory\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The directory of static files to validate\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"directory\\"
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"deployment\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler pages deployment\\",
            \\"metadata\\": {
              \\"description\\": \\"Interact with the deployments of a project\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"hideGlobalFlags\\": {
                \\"0\\": \\"config\\",
                \\"1\\": \\"env\\"
              }
            }
          },
          \\"subtree\\": {
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages deployment list\\",
                \\"metadata\\": {
                  \\"description\\": \\"List deployments in your Cloudflare Pages project\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"project-name\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The name of the project you would like to list deployments for\\"
                  },
                  \\"environment\\": {
                    \\"type\\": \\"string\\",
                    \\"choices\\": {
                      \\"0\\": \\"production\\",
                      \\"1\\": \\"preview\\"
                    },
                    \\"description\\": \\"Environment type to list deployments for\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"create\\": {
              \\"definition\\": {
                \\"type\\": \\"alias\\",
                \\"command\\": \\"wrangler pages deployment create\\",
                \\"aliasOf\\": \\"wrangler pages deploy\\"
              },
              \\"subtree\\": {}
            },
            \\"tail\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages deployment tail\\",
                \\"metadata\\": {
                  \\"description\\": \\"Start a tailing session for a project's deployment and livestream logs from your Functions\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"deployment\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"(Optional) ID or URL of the deployment to tail. Specify by environment if deployment ID is unknown.\\"
                  },
                  \\"project-name\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The name of the project you would like to tail\\"
                  },
                  \\"environment\\": {
                    \\"type\\": \\"string\\",
                    \\"choices\\": {
                      \\"0\\": \\"production\\",
                      \\"1\\": \\"preview\\"
                    },
                    \\"default\\": \\"production\\",
                    \\"description\\": \\"When not providing a specific deployment ID, specifying environment will grab the latest production or preview deployment\\"
                  },
                  \\"format\\": {
                    \\"type\\": \\"string\\",
                    \\"choices\\": {
                      \\"0\\": \\"json\\",
                      \\"1\\": \\"pretty\\"
                    },
                    \\"description\\": \\"The format of log entries\\"
                  },
                  \\"debug\\": {
                    \\"type\\": \\"boolean\\",
                    \\"hidden\\": true,
                    \\"default\\": false,
                    \\"description\\": \\"If a log would have been filtered out, send it through anyway alongside the filter which would have blocked it.\\"
                  },
                  \\"status\\": {
                    \\"choices\\": {
                      \\"0\\": \\"ok\\",
                      \\"1\\": \\"error\\",
                      \\"2\\": \\"canceled\\"
                    },
                    \\"description\\": \\"Filter by invocation status\\",
                    \\"array\\": true
                  },
                  \\"header\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"description\\": \\"Filter by HTTP header\\"
                  },
                  \\"method\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"description\\": \\"Filter by HTTP method\\",
                    \\"array\\": true
                  },
                  \\"search\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"description\\": \\"Filter by a text match in console.log messages\\"
                  },
                  \\"sampling-rate\\": {
                    \\"type\\": \\"number\\",
                    \\"description\\": \\"Adds a percentage of requests to log sampling rate\\"
                  },
                  \\"ip\\": {
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"description\\": \\"Filter by the IP address the request originates from. Use \\\\\\"self\\\\\\" to filter for your own IP\\",
                    \\"array\\": true
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"deployment\\"
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"deploy\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler pages deploy\\",
            \\"metadata\\": {
              \\"description\\": \\"Deploy a directory of static assets as a Pages deployment\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"hideGlobalFlags\\": {
                \\"0\\": \\"config\\",
                \\"1\\": \\"env\\"
              }
            },
            \\"behaviour\\": {
              \\"provideConfig\\": false
            },
            \\"args\\": {
              \\"directory\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The directory of static files to upload\\"
              },
              \\"project-name\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The name of the project you want to deploy to\\"
              },
              \\"branch\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The name of the branch you want to deploy to\\"
              },
              \\"commit-hash\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The SHA to attach to this deployment\\"
              },
              \\"commit-message\\": {
                \\"type\\": \\"string\\",
                \\"description\\": \\"The commit message to attach to this deployment\\"
              },
              \\"commit-dirty\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Whether or not the workspace should be considered dirty for this deployment\\"
              },
              \\"skip-caching\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Skip asset caching which speeds up builds\\"
              },
              \\"bundle\\": {
                \\"type\\": \\"boolean\\",
                \\"hidden\\": true
              },
              \\"no-bundle\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Whether to run bundling on \`_worker.js\` before deploying\\"
              },
              \\"config\\": {
                \\"description\\": \\"Pages does not support custom Wrangler configuration file locations\\",
                \\"type\\": \\"string\\",
                \\"hidden\\": true
              },
              \\"upload-source-maps\\": {
                \\"type\\": \\"boolean\\",
                \\"default\\": false,
                \\"description\\": \\"Whether to upload any server-side sourcemaps with this deployment\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"directory\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"publish\\": {
          \\"definition\\": {
            \\"type\\": \\"alias\\",
            \\"command\\": \\"wrangler pages publish\\",
            \\"aliasOf\\": \\"wrangler pages deploy\\",
            \\"metadata\\": {
              \\"deprecated\\": true,
              \\"hidden\\": true
            }
          },
          \\"subtree\\": {}
        },
        \\"secret\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler pages secret\\",
            \\"metadata\\": {
              \\"description\\": \\"Generate a secret that can be referenced in a Pages project\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"hideGlobalFlags\\": {
                \\"0\\": \\"config\\",
                \\"1\\": \\"env\\"
              }
            }
          },
          \\"subtree\\": {
            \\"put\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages secret put\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create or update a secret variable for a Pages project\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"key\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The variable name to be accessible in the Pages project\\",
                    \\"demandOption\\": true
                  },
                  \\"project-name\\": {
                    \\"type\\": \\"string\\",
                    \\"alias\\": {
                      \\"0\\": \\"project\\"
                    },
                    \\"description\\": \\"The name of your Pages project\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"key\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"bulk\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages secret bulk\\",
                \\"metadata\\": {
                  \\"description\\": \\"Bulk upload secrets for a Pages project\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"file\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The file of key-value pairs to upload, as JSON in form {\\\\\\"key\\\\\\": value, ...} or .dev.vars file in the form KEY=VALUE\\"
                  },
                  \\"project-name\\": {
                    \\"type\\": \\"string\\",
                    \\"alias\\": {
                      \\"0\\": \\"project\\"
                    },
                    \\"description\\": \\"The name of your Pages project\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"file\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages secret delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Delete a secret variable from a Pages project\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"key\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The variable name to be accessible in the Pages project\\",
                    \\"demandOption\\": true
                  },
                  \\"project-name\\": {
                    \\"type\\": \\"string\\",
                    \\"alias\\": {
                      \\"0\\": \\"project\\"
                    },
                    \\"description\\": \\"The name of your Pages project\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"key\\"
                }
              },
              \\"subtree\\": {}
            },
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages secret list\\",
                \\"metadata\\": {
                  \\"description\\": \\"List all secrets for a Pages project\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"project-name\\": {
                    \\"type\\": \\"string\\",
                    \\"alias\\": {
                      \\"0\\": \\"project\\"
                    },
                    \\"description\\": \\"The name of your Pages project\\"
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"download\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler pages download\\",
            \\"metadata\\": {
              \\"description\\": \\"Download settings from your project\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"hideGlobalFlags\\": {
                \\"0\\": \\"config\\",
                \\"1\\": \\"env\\"
              }
            }
          },
          \\"subtree\\": {
            \\"config\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler pages download config\\",
                \\"metadata\\": {
                  \\"description\\": \\"Download your Pages project config as a Wrangler configuration file\\",
                  \\"status\\": \\"experimental\\",
                  \\"owner\\": \\"Workers: Authoring and Testing\\",
                  \\"hideGlobalFlags\\": {
                    \\"0\\": \\"config\\",
                    \\"1\\": \\"env\\"
                  }
                },
                \\"behaviour\\": {
                  \\"provideConfig\\": false
                },
                \\"args\\": {
                  \\"projectName\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"The Pages project to download\\"
                  },
                  \\"force\\": {
                    \\"description\\": \\"Overwrite an existing Wrangler configuration file without prompting\\",
                    \\"type\\": \\"boolean\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"projectName\\"
                }
              },
              \\"subtree\\": {}
            }
          }
        }
      }
    },
    \\"mtls-certificate\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler mtls-certificate\\",
        \\"metadata\\": {
          \\"description\\": \\"🪪 Manage certificates used for mTLS connections\\",
          \\"owner\\": \\"Product: SSL\\",
          \\"status\\": \\"stable\\"
        }
      },
      \\"subtree\\": {
        \\"upload\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler mtls-certificate upload\\",
            \\"metadata\\": {
              \\"description\\": \\"Upload an mTLS certificate\\",
              \\"owner\\": \\"Product: SSL\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"cert\\": {
                \\"describe\\": \\"The path to a certificate file (.pem) containing a chain of certificates to upload\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              },
              \\"key\\": {
                \\"describe\\": \\"The path to a file containing the private key for your leaf certificate\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              },
              \\"name\\": {
                \\"describe\\": \\"The name for the certificate\\",
                \\"type\\": \\"string\\"
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler mtls-certificate list\\",
            \\"metadata\\": {
              \\"description\\": \\"List uploaded mTLS certificates\\",
              \\"owner\\": \\"Product: SSL\\",
              \\"status\\": \\"stable\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler mtls-certificate delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete an mTLS certificate\\",
              \\"owner\\": \\"Product: SSL\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"id\\": {
                \\"describe\\": \\"The id of the mTLS certificate to delete\\",
                \\"type\\": \\"string\\"
              },
              \\"name\\": {
                \\"describe\\": \\"The name of the mTLS certificate record to delete\\",
                \\"type\\": \\"string\\"
              }
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"dispatch-namespace\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler dispatch-namespace\\",
        \\"metadata\\": {
          \\"description\\": \\"🏗️  Manage dispatch namespaces\\",
          \\"owner\\": \\"Workers: Deploy and Config\\",
          \\"status\\": \\"stable\\"
        }
      },
      \\"subtree\\": {
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler dispatch-namespace list\\",
            \\"metadata\\": {
              \\"description\\": \\"List all dispatch namespaces\\",
              \\"owner\\": \\"Workers: Deploy and Config\\",
              \\"status\\": \\"stable\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"get\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler dispatch-namespace get\\",
            \\"metadata\\": {
              \\"description\\": \\"Get information about a dispatch namespace\\",
              \\"owner\\": \\"Workers: Deploy and Config\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the dispatch namespace\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"create\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler dispatch-namespace create\\",
            \\"metadata\\": {
              \\"description\\": \\"Create a dispatch namespace\\",
              \\"owner\\": \\"Workers: Deploy and Config\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the dispatch namespace\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler dispatch-namespace delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete a dispatch namespace\\",
              \\"owner\\": \\"Workers: Deploy and Config\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the dispatch namespace\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"rename\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler dispatch-namespace rename\\",
            \\"metadata\\": {
              \\"description\\": \\"Rename a dispatch namespace\\",
              \\"owner\\": \\"Workers: Deploy and Config\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"oldName\\": {
                \\"describe\\": \\"Name of the dispatch namespace\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              },
              \\"newName\\": {
                \\"describe\\": \\"New name of the dispatch namespace\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"oldName\\",
              \\"1\\": \\"newName\\"
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"ai\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler ai\\",
        \\"metadata\\": {
          \\"description\\": \\"🤖 Manage AI models\\",
          \\"status\\": \\"stable\\",
          \\"owner\\": \\"Product: AI\\"
        }
      },
      \\"subtree\\": {
        \\"models\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler ai models\\",
            \\"metadata\\": {
              \\"description\\": \\"List catalog models\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: AI\\"
            },
            \\"behaviour\\": {},
            \\"args\\": {
              \\"json\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Return output as clean JSON\\",
                \\"default\\": false
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"finetune\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler ai finetune\\",
            \\"metadata\\": {
              \\"description\\": \\"Interact with finetune files\\",
              \\"status\\": \\"stable\\",
              \\"owner\\": \\"Product: AI\\"
            }
          },
          \\"subtree\\": {
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler ai finetune list\\",
                \\"metadata\\": {
                  \\"description\\": \\"List your finetune files\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: AI\\"
                },
                \\"behaviour\\": {},
                \\"args\\": {
                  \\"json\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Return output as clean JSON\\",
                    \\"default\\": false
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"create\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler ai finetune create\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create finetune and upload assets\\",
                  \\"status\\": \\"stable\\",
                  \\"owner\\": \\"Product: AI\\"
                },
                \\"args\\": {
                  \\"model_name\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The catalog model name\\"
                  },
                  \\"finetune_name\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The finetune name\\"
                  },
                  \\"folder_path\\": {
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"description\\": \\"The folder path containing the finetune assets\\"
                  }
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"model_name\\",
                  \\"1\\": \\"finetune_name\\",
                  \\"2\\": \\"folder_path\\"
                }
              },
              \\"subtree\\": {}
            }
          }
        }
      }
    },
    \\"secrets-store\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler secrets-store\\",
        \\"metadata\\": {
          \\"description\\": \\"🔐 Manage the Secrets Store\\",
          \\"status\\": \\"alpha\\",
          \\"owner\\": \\"Product: SSL\\"
        }
      },
      \\"subtree\\": {
        \\"store\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler secrets-store store\\",
            \\"metadata\\": {
              \\"description\\": \\"🔐 Manage Stores within the Secrets Store\\",
              \\"status\\": \\"alpha\\",
              \\"owner\\": \\"Product: SSL\\"
            }
          },
          \\"subtree\\": {
            \\"create\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler secrets-store store create\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create a store within an account\\",
                  \\"status\\": \\"alpha\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"name\\"
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"Name of the store\\",
                    \\"demandOption\\": true,
                    \\"requiresArg\\": true
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute command against remote Secrets Store\\",
                    \\"default\\": false
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler secrets-store store delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Delete a store within an account\\",
                  \\"status\\": \\"alpha\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"store-id\\"
                },
                \\"args\\": {
                  \\"store-id\\": {
                    \\"type\\": \\"string\\",
                    \\"description\\": \\"ID of the store\\",
                    \\"demandOption\\": true,
                    \\"requiresArg\\": true
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute command against remote Secrets Store\\",
                    \\"default\\": false
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler secrets-store store list\\",
                \\"metadata\\": {
                  \\"description\\": \\"List stores within an account\\",
                  \\"status\\": \\"alpha\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"args\\": {
                  \\"page\\": {
                    \\"describe\\": \\"Page number of stores listing results, can configure page size using \\\\\\"per-page\\\\\\"\\",
                    \\"type\\": \\"number\\",
                    \\"default\\": 1
                  },
                  \\"per-page\\": {
                    \\"describe\\": \\"Number of stores to show per page\\",
                    \\"type\\": \\"number\\",
                    \\"default\\": 10
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute command against remote Secrets Store\\",
                    \\"default\\": false
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        },
        \\"secret\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler secrets-store secret\\",
            \\"metadata\\": {
              \\"description\\": \\"🔐 Manage Secrets within the Secrets Store\\",
              \\"status\\": \\"alpha\\",
              \\"owner\\": \\"Product: SSL\\"
            }
          },
          \\"subtree\\": {
            \\"create\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler secrets-store secret create\\",
                \\"metadata\\": {
                  \\"description\\": \\"Create a secret within a store\\",
                  \\"status\\": \\"alpha\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"store-id\\"
                },
                \\"args\\": {
                  \\"store-id\\": {
                    \\"describe\\": \\"ID of the store in which the secret resides\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"name\\": {
                    \\"describe\\": \\"Name of the secret\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"value\\": {
                    \\"describe\\": \\"Value of the secret (Note: Only for testing. Not secure as this will leave secret value in plain-text in terminal history, exclude this flag and use automatic prompt instead)\\",
                    \\"type\\": \\"string\\"
                  },
                  \\"scopes\\": {
                    \\"describe\\": \\"Scopes for the secret (comma-separated list of scopes eg:\\\\\\"workers\\\\\\")\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"comment\\": {
                    \\"describe\\": \\"Comment for the secret\\",
                    \\"type\\": \\"string\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute command against remote Secrets Store\\",
                    \\"default\\": false
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler secrets-store secret list\\",
                \\"metadata\\": {
                  \\"description\\": \\"List secrets within a store\\",
                  \\"status\\": \\"alpha\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"store-id\\"
                },
                \\"args\\": {
                  \\"store-id\\": {
                    \\"describe\\": \\"ID of the store in which to list secrets\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"requiresArg\\": true
                  },
                  \\"page\\": {
                    \\"describe\\": \\"Page number of secrets listing results, can configure page size using \\\\\\"per-page\\\\\\"\\",
                    \\"type\\": \\"number\\",
                    \\"default\\": 1
                  },
                  \\"per-page\\": {
                    \\"describe\\": \\"Number of secrets to show per page\\",
                    \\"type\\": \\"number\\",
                    \\"default\\": 10
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute command against remote Secrets Store\\",
                    \\"default\\": false
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"get\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler secrets-store secret get\\",
                \\"metadata\\": {
                  \\"description\\": \\"Get a secret within a store\\",
                  \\"status\\": \\"alpha\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"store-id\\"
                },
                \\"args\\": {
                  \\"store-id\\": {
                    \\"describe\\": \\"ID of the store in which the secret resides\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"requiresArg\\": true
                  },
                  \\"secret-id\\": {
                    \\"describe\\": \\"ID of the secret to retrieve\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true,
                    \\"requiresArg\\": true
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute command against remote Secrets Store\\",
                    \\"default\\": false
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"update\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler secrets-store secret update\\",
                \\"metadata\\": {
                  \\"description\\": \\"Update a secret within a store\\",
                  \\"status\\": \\"alpha\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"store-id\\"
                },
                \\"args\\": {
                  \\"store-id\\": {
                    \\"describe\\": \\"ID of the store in which the secret resides\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"secret-id\\": {
                    \\"describe\\": \\"ID of the secret to update\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"value\\": {
                    \\"describe\\": \\"Updated value of the secret (Note: Only for testing. Not secure as this will leave secret value in plain-text in terminal history, exclude this flag and use automatic prompt instead)\\",
                    \\"type\\": \\"string\\"
                  },
                  \\"scopes\\": {
                    \\"describe\\": \\"Updated scopes for the secret (comma-separated list of scopes eg:\\\\\\"workers\\\\\\")\\",
                    \\"type\\": \\"string\\"
                  },
                  \\"comment\\": {
                    \\"describe\\": \\"Updated comment for the secret\\",
                    \\"type\\": \\"string\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute command against remote Secrets Store\\",
                    \\"default\\": false
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"delete\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler secrets-store secret delete\\",
                \\"metadata\\": {
                  \\"description\\": \\"Delete a secret within a store\\",
                  \\"status\\": \\"alpha\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"store-id\\"
                },
                \\"args\\": {
                  \\"store-id\\": {
                    \\"describe\\": \\"ID of the store in which the secret resides\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"secret-id\\": {
                    \\"describe\\": \\"ID of the secret to delete\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute command against remote Secrets Store\\",
                    \\"default\\": false
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"duplicate\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler secrets-store secret duplicate\\",
                \\"metadata\\": {
                  \\"description\\": \\"Duplicate a secret within a store\\",
                  \\"status\\": \\"alpha\\",
                  \\"owner\\": \\"Product: SSL\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"store-id\\"
                },
                \\"args\\": {
                  \\"store-id\\": {
                    \\"describe\\": \\"ID of the store in which the secret resides\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"secret-id\\": {
                    \\"describe\\": \\"ID of the secret to duplicate the secret value of\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"name\\": {
                    \\"describe\\": \\"Name of the new secret\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"scopes\\": {
                    \\"describe\\": \\"Scopes for the new secret\\",
                    \\"type\\": \\"string\\",
                    \\"requiresArg\\": true,
                    \\"demandOption\\": true
                  },
                  \\"comment\\": {
                    \\"describe\\": \\"Comment for the new secret\\",
                    \\"type\\": \\"string\\"
                  },
                  \\"remote\\": {
                    \\"type\\": \\"boolean\\",
                    \\"description\\": \\"Execute command against remote Secrets Store\\",
                    \\"default\\": false
                  },
                  \\"persist-to\\": {
                    \\"type\\": \\"string\\",
                    \\"describe\\": \\"Directory for local persistence\\"
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        }
      }
    },
    \\"workflows\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler workflows\\",
        \\"metadata\\": {
          \\"description\\": \\"🔁 Manage Workflows\\",
          \\"owner\\": \\"Product: Workflows\\",
          \\"status\\": \\"stable\\"
        }
      },
      \\"subtree\\": {
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler workflows list\\",
            \\"metadata\\": {
              \\"description\\": \\"List Workflows associated to account\\",
              \\"owner\\": \\"Product: Workflows\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"page\\": {
                \\"describe\\": \\"Show a sepecific page from the listing, can configure page size using \\\\\\"per-page\\\\\\"\\",
                \\"type\\": \\"number\\",
                \\"default\\": 1
              },
              \\"per-page\\": {
                \\"describe\\": \\"Configure the maximum number of workflows to show per page\\",
                \\"type\\": \\"number\\"
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"describe\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler workflows describe\\",
            \\"metadata\\": {
              \\"description\\": \\"Describe Workflow resource\\",
              \\"owner\\": \\"Product: Workflows\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the workflow\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler workflows delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete workflow - when deleting a workflow, it will also delete it's own instances\\",
              \\"owner\\": \\"Product: Workflows\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the workflow\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"trigger\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler workflows trigger\\",
            \\"metadata\\": {
              \\"description\\": \\"Trigger a workflow, creating a new instance. Can optionally take a JSON string to pass a parameter into the workflow instance\\",
              \\"owner\\": \\"Product: Workflows\\",
              \\"status\\": \\"stable\\"
            },
            \\"args\\": {
              \\"name\\": {
                \\"describe\\": \\"Name of the workflow\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              },
              \\"params\\": {
                \\"describe\\": \\"Params for the workflow instance, encoded as a JSON string\\",
                \\"type\\": \\"string\\",
                \\"default\\": \\"\\"
              },
              \\"id\\": {
                \\"describe\\": \\"Custom instance ID, if not provided it will default to a random UUIDv4\\",
                \\"type\\": \\"string\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"name\\",
              \\"1\\": \\"params\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"instances\\": {
          \\"definition\\": {
            \\"type\\": \\"namespace\\",
            \\"command\\": \\"wrangler workflows instances\\",
            \\"metadata\\": {
              \\"description\\": \\"Manage Workflow instances\\",
              \\"owner\\": \\"Product: Workflows\\",
              \\"status\\": \\"stable\\"
            }
          },
          \\"subtree\\": {
            \\"list\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler workflows instances list\\",
                \\"metadata\\": {
                  \\"description\\": \\"Instance related commands (list, describe, terminate, pause, resume)\\",
                  \\"owner\\": \\"Product: Workflows\\",
                  \\"status\\": \\"stable\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"name\\"
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"describe\\": \\"Name of the workflow\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"reverse\\": {
                    \\"describe\\": \\"Reverse order of the instances table\\",
                    \\"type\\": \\"boolean\\",
                    \\"default\\": false
                  },
                  \\"status\\": {
                    \\"describe\\": \\"Filters list by instance status (can be one of: queued, running, paused, errored, terminated, complete)\\",
                    \\"type\\": \\"string\\"
                  },
                  \\"page\\": {
                    \\"describe\\": \\"Show a sepecific page from the listing, can configure page size using \\\\\\"per-page\\\\\\"\\",
                    \\"type\\": \\"number\\",
                    \\"default\\": 1
                  },
                  \\"per-page\\": {
                    \\"describe\\": \\"Configure the maximum number of instances to show per page\\",
                    \\"type\\": \\"number\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"describe\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler workflows instances describe\\",
                \\"metadata\\": {
                  \\"description\\": \\"Describe a workflow instance - see its logs, retries and errors\\",
                  \\"owner\\": \\"Product: Workflows\\",
                  \\"status\\": \\"stable\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"name\\",
                  \\"1\\": \\"id\\"
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"describe\\": \\"Name of the workflow\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"id\\": {
                    \\"describe\\": \\"ID of the instance - instead of an UUID you can type 'latest' to get the latest instance and describe it\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": false,
                    \\"default\\": \\"latest\\"
                  },
                  \\"step-output\\": {
                    \\"describe\\": \\"Don't output the step output since it might clutter the terminal\\",
                    \\"type\\": \\"boolean\\",
                    \\"default\\": true
                  },
                  \\"truncate-output-limit\\": {
                    \\"describe\\": \\"Truncate step output after x characters\\",
                    \\"type\\": \\"number\\",
                    \\"default\\": 5000
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"terminate\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler workflows instances terminate\\",
                \\"metadata\\": {
                  \\"description\\": \\"Terminate a workflow instance\\",
                  \\"owner\\": \\"Product: Workflows\\",
                  \\"status\\": \\"stable\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"name\\",
                  \\"1\\": \\"id\\"
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"describe\\": \\"Name of the workflow\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"id\\": {
                    \\"describe\\": \\"ID of the instance - instead of an UUID you can type 'latest' to get the latest instance and describe it\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"terminate-all\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler workflows instances terminate-all\\",
                \\"metadata\\": {
                  \\"description\\": \\"Terminate all workflow instances\\",
                  \\"owner\\": \\"Product: Workflows\\",
                  \\"status\\": \\"stable\\",
                  \\"hidden\\": true
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"name\\"
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"describe\\": \\"Name of the workflow\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"status\\": {
                    \\"describe\\": \\"Filter instances to be terminated by status\\",
                    \\"type\\": \\"string\\"
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"pause\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler workflows instances pause\\",
                \\"metadata\\": {
                  \\"description\\": \\"Pause a workflow instance\\",
                  \\"owner\\": \\"Product: Workflows\\",
                  \\"status\\": \\"stable\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"name\\",
                  \\"1\\": \\"id\\"
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"describe\\": \\"Name of the workflow\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"id\\": {
                    \\"describe\\": \\"ID of the instance - instead of an UUID you can type 'latest' to get the latest instance and pause it\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  }
                }
              },
              \\"subtree\\": {}
            },
            \\"resume\\": {
              \\"definition\\": {
                \\"type\\": \\"command\\",
                \\"command\\": \\"wrangler workflows instances resume\\",
                \\"metadata\\": {
                  \\"description\\": \\"Resume a workflow instance\\",
                  \\"owner\\": \\"Product: Workflows\\",
                  \\"status\\": \\"stable\\"
                },
                \\"positionalArgs\\": {
                  \\"0\\": \\"name\\",
                  \\"1\\": \\"id\\"
                },
                \\"args\\": {
                  \\"name\\": {
                    \\"describe\\": \\"Name of the workflow\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  },
                  \\"id\\": {
                    \\"describe\\": \\"ID of the instance - instead of an UUID you can type 'latest' to get the latest instance and resume it\\",
                    \\"type\\": \\"string\\",
                    \\"demandOption\\": true
                  }
                }
              },
              \\"subtree\\": {}
            }
          }
        }
      }
    },
    \\"pipelines\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler pipelines\\",
        \\"metadata\\": {
          \\"description\\": \\"🚰 Manage Cloudflare Pipelines\\",
          \\"owner\\": \\"Product: Pipelines\\",
          \\"status\\": \\"open-beta\\"
        }
      },
      \\"subtree\\": {
        \\"create\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler pipelines create\\",
            \\"metadata\\": {
              \\"description\\": \\"Create a new pipeline\\",
              \\"owner\\": \\"Product: Pipelines\\",
              \\"status\\": \\"open-beta\\"
            },
            \\"args\\": {
              \\"pipeline\\": {
                \\"describe\\": \\"The name of the new pipeline\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              },
              \\"source\\": {
                \\"type\\": \\"array\\",
                \\"describe\\": \\"Space separated list of allowed sources. Options are 'http' or 'worker'\\",
                \\"default\\": {
                  \\"0\\": \\"http\\",
                  \\"1\\": \\"worker\\"
                },
                \\"demandOption\\": false,
                \\"group\\": \\"Source settings\\"
              },
              \\"require-http-auth\\": {
                \\"type\\": \\"boolean\\",
                \\"describe\\": \\"Require Cloudflare API Token for HTTPS endpoint authentication\\",
                \\"default\\": false,
                \\"demandOption\\": false,
                \\"group\\": \\"Source settings\\"
              },
              \\"cors-origins\\": {
                \\"type\\": \\"array\\",
                \\"describe\\": \\"CORS origin allowlist for HTTP endpoint (use * for any origin). Defaults to an empty array\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Source settings\\"
              },
              \\"batch-max-mb\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"Maximum batch size in megabytes before flushing. Defaults to 100 MB if unset. Minimum: 1, Maximum: 100\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Batch hints\\"
              },
              \\"batch-max-rows\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"Maximum number of rows per batch before flushing. Defaults to 10,000,000 if unset. Minimum: 100, Maximum: 10,000,000\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Batch hints\\"
              },
              \\"batch-max-seconds\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"Maximum age of batch in seconds before flushing. Defaults to 300 if unset. Minimum: 1, Maximum: 300\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Batch hints\\"
              },
              \\"transform-worker\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Pipeline transform Worker and entrypoint (<worker>.<entrypoint>)\\",
                \\"demandOption\\": false,
                \\"hidden\\": true,
                \\"group\\": \\"Transformations\\"
              },
              \\"r2-bucket\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Destination R2 bucket name\\",
                \\"demandOption\\": true,
                \\"group\\": \\"Destination settings\\"
              },
              \\"r2-access-key-id\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"R2 service Access Key ID for authentication. Leave empty for OAuth confirmation.\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Destination settings\\",
                \\"implies\\": \\"r2-secret-access-key\\"
              },
              \\"r2-secret-access-key\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"R2 service Secret Access Key for authentication. Leave empty for OAuth confirmation.\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Destination settings\\",
                \\"implies\\": \\"r2-access-key-id\\"
              },
              \\"r2-prefix\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Prefix for storing files in the destination bucket. Default is no prefix\\",
                \\"default\\": \\"\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Destination settings\\"
              },
              \\"compression\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Compression format for output files\\",
                \\"choices\\": {
                  \\"0\\": \\"none\\",
                  \\"1\\": \\"gzip\\",
                  \\"2\\": \\"deflate\\"
                },
                \\"default\\": \\"gzip\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Destination settings\\"
              },
              \\"shard-count\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"Number of shards for the pipeline. More shards handle higher request volume; fewer shards produce larger output files. Defaults to 2 if unset. Minimum: 1, Maximum: 15\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Pipeline settings\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"pipeline\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"list\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler pipelines list\\",
            \\"metadata\\": {
              \\"description\\": \\"List all pipelines\\",
              \\"owner\\": \\"Product: Pipelines\\",
              \\"status\\": \\"open-beta\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"get\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler pipelines get\\",
            \\"metadata\\": {
              \\"description\\": \\"Get a pipeline's configuration\\",
              \\"owner\\": \\"Product: Pipelines\\",
              \\"status\\": \\"open-beta\\"
            },
            \\"args\\": {
              \\"pipeline\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"The name of the pipeline to inspect\\",
                \\"demandOption\\": true
              },
              \\"format\\": {
                \\"choices\\": {
                  \\"0\\": \\"pretty\\",
                  \\"1\\": \\"json\\"
                },
                \\"describe\\": \\"The output format for pipeline\\",
                \\"default\\": \\"pretty\\"
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"pipeline\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"update\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler pipelines update\\",
            \\"metadata\\": {
              \\"description\\": \\"Update a pipeline\\",
              \\"owner\\": \\"Product: Pipelines\\",
              \\"status\\": \\"open-beta\\"
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"pipeline\\"
            },
            \\"args\\": {
              \\"pipeline\\": {
                \\"describe\\": \\"The name of the new pipeline\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true
              },
              \\"source\\": {
                \\"type\\": \\"array\\",
                \\"describe\\": \\"Space separated list of allowed sources. Options are 'http' or 'worker'\\",
                \\"group\\": \\"Source settings\\"
              },
              \\"require-http-auth\\": {
                \\"type\\": \\"boolean\\",
                \\"describe\\": \\"Require Cloudflare API Token for HTTPS endpoint authentication\\",
                \\"group\\": \\"Source settings\\"
              },
              \\"cors-origins\\": {
                \\"type\\": \\"array\\",
                \\"describe\\": \\"CORS origin allowlist for HTTP endpoint (use * for any origin). Defaults to an empty array\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Source settings\\"
              },
              \\"batch-max-mb\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"Maximum batch size in megabytes before flushing. Defaults to 100 MB if unset. Minimum: 1, Maximum: 100\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Batch hints\\"
              },
              \\"batch-max-rows\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"Maximum number of rows per batch before flushing. Defaults to 10,000,000 if unset. Minimum: 100, Maximum: 10,000,000\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Batch hints\\"
              },
              \\"batch-max-seconds\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"Maximum age of batch in seconds before flushing. Defaults to 300 if unset. Minimum: 1, Maximum: 300\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Batch hints\\"
              },
              \\"transform-worker\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Pipeline transform Worker and entrypoint (<worker>.<entrypoint>)\\",
                \\"demandOption\\": false,
                \\"hidden\\": true,
                \\"group\\": \\"Transformations\\"
              },
              \\"r2-bucket\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Destination R2 bucket name\\",
                \\"group\\": \\"Destination settings\\"
              },
              \\"r2-access-key-id\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"R2 service Access Key ID for authentication. Leave empty for OAuth confirmation.\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Destination settings\\",
                \\"implies\\": \\"r2-secret-access-key\\"
              },
              \\"r2-secret-access-key\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"R2 service Secret Access Key for authentication. Leave empty for OAuth confirmation.\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Destination settings\\",
                \\"implies\\": \\"r2-access-key-id\\"
              },
              \\"r2-prefix\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Prefix for storing files in the destination bucket. Default is no prefix\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Destination settings\\"
              },
              \\"compression\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Compression format for output files\\",
                \\"choices\\": {
                  \\"0\\": \\"none\\",
                  \\"1\\": \\"gzip\\",
                  \\"2\\": \\"deflate\\"
                },
                \\"demandOption\\": false,
                \\"group\\": \\"Destination settings\\"
              },
              \\"shard-count\\": {
                \\"type\\": \\"number\\",
                \\"describe\\": \\"Number of shards for the pipeline. More shards handle higher request volume; fewer shards produce larger output files. Defaults to 2 if unset. Minimum: 1, Maximum: 15\\",
                \\"demandOption\\": false,
                \\"group\\": \\"Pipeline settings\\"
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"delete\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler pipelines delete\\",
            \\"metadata\\": {
              \\"description\\": \\"Delete a pipeline\\",
              \\"owner\\": \\"Product: Pipelines\\",
              \\"status\\": \\"open-beta\\"
            },
            \\"args\\": {
              \\"pipeline\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"The name of the pipeline to delete\\",
                \\"demandOption\\": true
              }
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"pipeline\\"
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"hello-world\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler hello-world\\",
        \\"metadata\\": {
          \\"description\\": \\"👋 Example local commands. DO NOT USE\\",
          \\"status\\": \\"experimental\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"hidden\\": true
        }
      },
      \\"subtree\\": {
        \\"get\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler hello-world get\\",
            \\"metadata\\": {
              \\"description\\": \\"Example local command - Get a value from the account\\",
              \\"status\\": \\"experimental\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"hidden\\": true
            },
            \\"positionalArgs\\": {},
            \\"args\\": {
              \\"remote\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Execute command against remote service\\",
                \\"default\\": false
              },
              \\"persist-to\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Directory for local persistence\\"
              }
            }
          },
          \\"subtree\\": {}
        },
        \\"set\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler hello-world set\\",
            \\"metadata\\": {
              \\"description\\": \\"Example local command - Set a value to the account\\",
              \\"status\\": \\"experimental\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"hidden\\": true
            },
            \\"positionalArgs\\": {
              \\"0\\": \\"value\\"
            },
            \\"args\\": {
              \\"value\\": {
                \\"describe\\": \\"Value to set in the account\\",
                \\"type\\": \\"string\\",
                \\"demandOption\\": true,
                \\"requiresArg\\": true
              },
              \\"remote\\": {
                \\"type\\": \\"boolean\\",
                \\"description\\": \\"Execute command against remote service\\",
                \\"default\\": false
              },
              \\"persist-to\\": {
                \\"type\\": \\"string\\",
                \\"describe\\": \\"Directory for local persistence\\"
              }
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"login\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler login\\",
        \\"metadata\\": {
          \\"description\\": \\"🔓 Login to Cloudflare\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\"
        },
        \\"behaviour\\": {
          \\"printConfigWarnings\\": false
        },
        \\"args\\": {
          \\"scopes-list\\": {
            \\"describe\\": \\"List all the available OAuth scopes with descriptions\\"
          },
          \\"browser\\": {
            \\"default\\": true,
            \\"type\\": \\"boolean\\",
            \\"describe\\": \\"Automatically open the OAuth link in a browser\\"
          },
          \\"scopes\\": {
            \\"describe\\": \\"Pick the set of applicable OAuth scopes when logging in\\",
            \\"array\\": true,
            \\"type\\": \\"string\\",
            \\"requiresArg\\": true
          },
          \\"callback-host\\": {
            \\"describe\\": \\"Use the ip or host address for the temporary login callback server.\\",
            \\"type\\": \\"string\\",
            \\"requiresArg\\": false,
            \\"default\\": \\"localhost\\"
          },
          \\"callback-port\\": {
            \\"describe\\": \\"Use the port for the temporary login callback server.\\",
            \\"type\\": \\"number\\",
            \\"requiresArg\\": false,
            \\"default\\": 8976
          }
        }
      },
      \\"subtree\\": {}
    },
    \\"logout\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler logout\\",
        \\"metadata\\": {
          \\"description\\": \\"🚪 Logout from Cloudflare\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\"
        },
        \\"behaviour\\": {
          \\"printConfigWarnings\\": false
        }
      },
      \\"subtree\\": {}
    },
    \\"whoami\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler whoami\\",
        \\"metadata\\": {
          \\"description\\": \\"🕵️  Retrieve your user information\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\"
        },
        \\"behaviour\\": {
          \\"printConfigWarnings\\": false
        },
        \\"args\\": {
          \\"account\\": {
            \\"type\\": \\"string\\",
            \\"describe\\": \\"Show membership information for the given account (id or name).\\"
          }
        }
      },
      \\"subtree\\": {}
    },
    \\"telemetry\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler telemetry\\",
        \\"metadata\\": {
          \\"description\\": \\"📈 Configure whether Wrangler collects telemetry\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\",
          \\"hidden\\": true
        }
      },
      \\"subtree\\": {
        \\"disable\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler telemetry disable\\",
            \\"metadata\\": {
              \\"description\\": \\"Disable Wrangler telemetry collection\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"enable\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler telemetry enable\\",
            \\"metadata\\": {
              \\"description\\": \\"Enable Wrangler telemetry collection\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\"
            }
          },
          \\"subtree\\": {}
        },
        \\"status\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler telemetry status\\",
            \\"metadata\\": {
              \\"description\\": \\"Check whether Wrangler telemetry collection is enabled\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"stable\\"
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"metrics\\": {
      \\"definition\\": {
        \\"type\\": \\"alias\\",
        \\"command\\": \\"wrangler metrics\\",
        \\"aliasOf\\": \\"wrangler telemetry\\"
      },
      \\"subtree\\": {}
    },
    \\"check\\": {
      \\"definition\\": {
        \\"type\\": \\"namespace\\",
        \\"command\\": \\"wrangler check\\",
        \\"metadata\\": {
          \\"description\\": \\"☑︎ Run checks on your Worker\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"alpha\\",
          \\"hidden\\": true
        }
      },
      \\"subtree\\": {
        \\"startup\\": {
          \\"definition\\": {
            \\"type\\": \\"command\\",
            \\"command\\": \\"wrangler check startup\\",
            \\"args\\": {
              \\"outfile\\": {
                \\"describe\\": \\"Output file for startup phase cpuprofile\\",
                \\"type\\": \\"string\\",
                \\"default\\": \\"worker-startup.cpuprofile\\"
              },
              \\"workerBundle\\": {
                \\"alias\\": \\"worker\\",
                \\"describe\\": \\"Path to a prebuilt worker bundle i.e the output of \`wrangler deploy --outfile worker.bundle\\",
                \\"type\\": \\"string\\"
              },
              \\"pages\\": {
                \\"describe\\": \\"Force this project to be treated as a Pages project\\",
                \\"type\\": \\"boolean\\"
              },
              \\"args\\": {
                \\"describe\\": \\"Additional arguments passed to \`wrangler deploy\` or \`wrangler pages functions build\` e.g. \`--no-bundle\`\\",
                \\"type\\": \\"string\\"
              }
            },
            \\"metadata\\": {
              \\"description\\": \\"⌛ Profile your Worker's startup performance\\",
              \\"owner\\": \\"Workers: Authoring and Testing\\",
              \\"status\\": \\"alpha\\"
            }
          },
          \\"subtree\\": {}
        }
      }
    },
    \\"build\\": {
      \\"definition\\": {
        \\"type\\": \\"command\\",
        \\"command\\": \\"wrangler build\\",
        \\"metadata\\": {
          \\"description\\": \\"🔨 Build a Worker\\",
          \\"owner\\": \\"Workers: Authoring and Testing\\",
          \\"status\\": \\"stable\\",
          \\"hidden\\": true
        },
        \\"behaviour\\": {
          \\"printBanner\\": false,
          \\"provideConfig\\": false
        }
      },
      \\"subtree\\": {}
    }
  }
}"
`;
